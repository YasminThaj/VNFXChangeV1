<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171003 17:26:11.268" generator="Robot 3.0.2 (Python 2.7.13 on win32)">
<suite source="D:\automation_verizon\Automation_demo\back_tar\scripts" id="s1" name="Scripts">
<suite source="D:\automation_verizon\Automation_demo\back_tar\scripts\Verizon_OpenStack.robot" id="s1-s1" name="Verizon OpenStack">
<test id="s1-s1-t1" name="Config_setup_traffic">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>config_default</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:12.827" starttime="20171003 17:26:12.826"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Config_Traffic_in</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:12.827" starttime="20171003 17:26:12.827"></status>
</kw>
<kw name="config_interfaces">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${IP}</arg>
<arg>Ip_address</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:12.827" starttime="20171003 17:26:12.827"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>${IP}</arg>
<arg>10.53.173.210</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:12.828" starttime="20171003 17:26:12.828"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>10.53.173.210</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:12.828" starttime="20171003 17:26:12.828"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20171003 17:26:12.829" level="INFO">Logging into '10.53.173.210:22' as 'vyos'.</msg>
<msg timestamp="20171003 17:26:13.964" level="INFO">Read output: Linux vyos 3.13.11-1-amd64-vyos #1 SMP Wed Aug 12 02:08:05 UTC 2015 x86_64
Welcome to VyOS.
This system is open-source software. The exact distribution terms for 
each module comprising the full system are described in the individual 
files in /usr/share/doc/*/copyright.
Last login: Tue Oct  3 11:53:36 2017 from 10.53.172.9
vyos@vyos:~$</msg>
<status status="PASS" endtime="20171003 17:26:13.964" starttime="20171003 17:26:12.828"></status>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<doc>Update the `configuration` of the current connection.</doc>
<arguments>
<arg>timeout=30s</arg>
<arg>prompt=${default_config_prompt}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:13.966" starttime="20171003 17:26:13.965"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>config</arg>
</arguments>
<msg timestamp="20171003 17:26:13.973" level="INFO">config</msg>
<status status="PASS" endtime="20171003 17:26:13.973" starttime="20171003 17:26:13.966"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.351" level="INFO">[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.351" level="INFO">${output} = [edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.351" starttime="20171003 17:26:13.974"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${interface_eth0_command}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.365" level="INFO">set interfaces ethernet eth1 address 10.72.24.100/24</msg>
<status status="PASS" endtime="20171003 17:26:14.365" starttime="20171003 17:26:14.351"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.490" level="INFO">[?1h=[m
  Configuration path: [interfaces ethernet eth1 address 10.72.24.100/24] already[m  exists[m
[m
[K[?1l&gt;[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.490" level="INFO">${output} = [?1h=[m
  Configuration path: [interfaces ethernet eth1 address 10.72.24.100/24] already[m  exists[m
[m
[K[?1l&gt;[edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.491" starttime="20171003 17:26:14.366"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${save_command}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.493" level="INFO">commit</msg>
<status status="PASS" endtime="20171003 17:26:14.493" starttime="20171003 17:26:14.491"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.500" level="INFO">No configuration changes to commit
[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.500" level="INFO">${output} = No configuration changes to commit
[edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.500" starttime="20171003 17:26:14.494"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${auto_save_command}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.509" level="INFO">set interfaces ethernet eth1 speed auto</msg>
<status status="PASS" endtime="20171003 17:26:14.509" starttime="20171003 17:26:14.500"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.637" level="INFO">[?1h=[m
  Configuration path: [interfaces ethernet eth1 speed auto] already exists[m
[m
[K[?1l&gt;[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.637" level="INFO">${output} = [?1h=[m
  Configuration path: [interfaces ethernet eth1 speed auto] already exists[m
[m
[K[?1l&gt;[edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.637" starttime="20171003 17:26:14.510"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${save_command}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.640" level="INFO">commit</msg>
<status status="PASS" endtime="20171003 17:26:14.640" starttime="20171003 17:26:14.637"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.647" level="INFO">No configuration changes to commit
[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.647" level="INFO">${output} = No configuration changes to commit
[edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.647" starttime="20171003 17:26:14.640"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${save_command2}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.649" level="INFO">save</msg>
<status status="PASS" endtime="20171003 17:26:14.649" starttime="20171003 17:26:14.647"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:26:14.782" level="INFO">Saving configuration to '/config/config.boot'...
Done
[edit]
vyos@vyos#</msg>
<msg timestamp="20171003 17:26:14.782" level="INFO">${output} = Saving configuration to '/config/config.boot'...
Done
[edit]
vyos@vyos#</msg>
<status status="PASS" endtime="20171003 17:26:14.782" starttime="20171003 17:26:14.649"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20171003 17:26:14.896" starttime="20171003 17:26:14.782"></status>
</kw>
<status status="PASS" endtime="20171003 17:26:14.896" starttime="20171003 17:26:12.827"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${ip}</arg>
<arg>Ip_address</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.897" starttime="20171003 17:26:14.897"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Connection</arg>
<arg>${ip}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.898" starttime="20171003 17:26:14.898"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.899" starttime="20171003 17:26:14.898"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Client Configuration</arg>
<arg>timeout=30s</arg>
<arg>prompt=${default_prompt}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.899" starttime="20171003 17:26:14.899"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Write</arg>
<arg>${command_interface}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.900" starttime="20171003 17:26:14.900"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${output}</arg>
<arg>Read Until Prompt</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.901" starttime="20171003 17:26:14.900"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${output}</arg>
<arg>Validate Interfaces Vyos</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.901" starttime="20171003 17:26:14.901"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be True</arg>
<arg>${output}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.902" starttime="20171003 17:26:14.902"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20171003 17:26:14.903" starttime="20171003 17:26:14.902"></status>
</kw>
<status status="PASS" endtime="20171003 17:26:14.903" critical="yes" starttime="20171003 17:26:12.826"></status>
</test>
<test id="s1-s1-t2" name="ixia">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${ip}</arg>
<arg>Ip_address</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.905" starttime="20171003 17:26:14.905"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Open Connection</arg>
<arg>${ip}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.906" starttime="20171003 17:26:14.906"></status>
</kw>
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>10.53.173.210</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:14.907" starttime="20171003 17:26:14.906"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${username}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20171003 17:26:14.908" level="INFO">Logging into '10.53.173.210:22' as 'vyos'.</msg>
<msg timestamp="20171003 17:26:16.012" level="INFO">Read output: Linux vyos 3.13.11-1-amd64-vyos #1 SMP Wed Aug 12 02:08:05 UTC 2015 x86_64
Welcome to VyOS.
This system is open-source software. The exact distribution terms for 
each module comprising the full system are described in the individual 
files in /usr/share/doc/*/copyright.
Last login: Tue Oct  3 11:55:34 2017 from 10.53.172.9
vyos@vyos:~$</msg>
<status status="PASS" endtime="20171003 17:26:16.012" starttime="20171003 17:26:14.907"></status>
</kw>
<kw name="Set Client Configuration" library="SSHLibrary">
<doc>Update the `configuration` of the current connection.</doc>
<arguments>
<arg>timeout=10s</arg>
<arg>prompt=${default_prompt}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:26:16.013" starttime="20171003 17:26:16.013"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${packets_eth0}</arg>
</arguments>
<msg timestamp="20171003 17:26:16.030" level="INFO">show interfaces ethernet eth0</msg>
<status status="PASS" endtime="20171003 17:26:16.030" starttime="20171003 17:26:16.014"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output_eth0}</var>
</assign>
<msg timestamp="20171003 17:26:16.130" level="INFO">[?1h=eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:cc:2e:d6 brd ff:ff:ff:ff:ff:ff[m
    inet 10.53.173.210/24 brd 10.53.173.255 scope global eth0[m
       valid_lft forever preferred_lft forever[m
    inet6 fe80::f816:3eff:fecc:2ed6/64 scope link [m
       valid_lft forever preferred_lft forever[m
[m
    RX:  bytes    packets     errors    dropped    overrun      mcast[m
        248322       1515          0          0          0          0[m
    TX:  bytes    packets     errors    dropped    carrier collisions[m
        109762        881          0          0          0          0[m
[K[?1l&gt;vyos@vyos:~$</msg>
<msg timestamp="20171003 17:26:16.130" level="INFO">${output_eth0} = [?1h=eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:cc:2e:d6 brd ff:ff:ff:ff:ff:ff[m
    inet 10.53.173.210/24...</msg>
<status status="PASS" endtime="20171003 17:26:16.130" starttime="20171003 17:26:16.030"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${packets_eth1}</arg>
</arguments>
<msg timestamp="20171003 17:26:16.134" level="INFO">show interfaces ethernet eth1</msg>
<status status="PASS" endtime="20171003 17:26:16.134" starttime="20171003 17:26:16.131"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output_eth1}</var>
</assign>
<msg timestamp="20171003 17:26:16.244" level="INFO">[?1h=eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:7b:86:89 brd ff:ff:ff:ff:ff:ff[m
    inet 10.72.24.100/24 brd 10.72.24.255 scope global eth1[m
       valid_lft forever preferred_lft forever[m
    inet6 fe80::f816:3eff:fe7b:8689/64 scope link [m
       valid_lft forever preferred_lft forever[m
[m
    RX:  bytes    packets     errors    dropped    overrun      mcast[m
           948         12          0          0          0          0[m
    TX:  bytes    packets     errors    dropped    carrier collisions[m
           728          6          0          0          0          0[m
[K[?1l&gt;vyos@vyos:~$</msg>
<msg timestamp="20171003 17:24:16.401" level="INFO">${output_eth1} = [?1h=eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:7b:86:89 brd ff:ff:ff:ff:ff:ff[m
    inet 10.72.24.100/24 ...</msg>
<status status="PASS" endtime="20171003 17:24:16.401" starttime="20171003 17:24:16.288"></status>
</kw>
<kw name="Packets Capture" library="VerizonDemo">
<arguments>
<arg>${output_eth0}</arg>
</arguments>
<assign>
<var>${receiving_packets_eth0_before}</var>
<var>${transmission_packets_eth0_before}</var>
</assign>
<msg timestamp="20171003 17:24:16.402" level="INFO">${receiving_packets_eth0_before} = 688</msg>
<msg timestamp="20171003 17:24:16.402" level="INFO">${transmission_packets_eth0_before} = 1381</msg>
<status status="PASS" endtime="20171003 17:24:16.402" starttime="20171003 17:24:16.401"></status>
</kw>
<kw name="Packets Capture" library="VerizonDemo">
<arguments>
<arg>${output_eth1}</arg>
</arguments>
<assign>
<var>${receiving_packets_eth1_before}</var>
<var>${transmission_packets_eth1_before}</var>
</assign>
<msg timestamp="20171003 17:24:16.402" level="INFO">${receiving_packets_eth1_before} = 6</msg>
<msg timestamp="20171003 17:24:16.402" level="INFO">${transmission_packets_eth1_before} = 12</msg>
<status status="PASS" endtime="20171003 17:24:16.402" starttime="20171003 17:24:16.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20171003 17:24:18.403" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20171003 17:24:18.403" starttime="20171003 17:24:16.402"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>dir</arg>
</arguments>
<assign>
<var>${op}</var>
</assign>
<msg timestamp="20171003 17:24:18.407" level="INFO">Running command 'dir 2&gt;&amp;1'.</msg>
<msg timestamp="20171003 17:24:18.419" level="INFO">${op} =  Volume in drive C is Windows 
 Volume Serial Number is 3610-4E41

 Directory of C:\xampp\htdocs\VNFXchange

03-10-2017  16:54    &lt;DIR&gt;          .
03-10-2017  16:54    &lt;DIR&gt;          ..
18-09-2017  15...</msg>
<status status="PASS" endtime="20171003 17:24:18.419" starttime="20171003 17:24:18.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${op}</arg>
</arguments>
<msg timestamp="20171003 17:24:18.420" level="INFO"> Volume in drive C is Windows 
 Volume Serial Number is 3610-4E41

 Directory of C:\xampp\htdocs\VNFXchange

03-10-2017  16:54    &lt;DIR&gt;          .
03-10-2017  16:54    &lt;DIR&gt;          ..
18-09-2017  15:02               229 argfile.txt
07-06-2017  15:23               229 argfile_bkp.txt
13-09-2017  14:33    &lt;DIR&gt;          bin
11-09-2017  15:48               296 commands
04-04-2017  16:04               570 demo.py
13-09-2017  15:31                25 flavour13.txt
28-04-2017  11:27               491 imageTransfer.py
29-09-2017  13:00               147 ImageUpload.txt
15-09-2017  16:32    &lt;DIR&gt;          IMSonboard
16-09-2017  16:20             7,366 launch_instances - devstack_mitaka.py
12-09-2017  17:45             8,346 launch_instances - newcmd.py
17-09-2017  14:22             7,445 launch_instances.py
03-05-2017  14:45             2,990 launch_instances_old.py
06-06-2017  15:50           230,917 log.html
02-05-2017  11:39    &lt;DIR&gt;          New folder
13-09-2017  14:34    &lt;DIR&gt;          node_modules
07-06-2017  16:48             7,078 npm-debug.log
04-05-2017  17:08             3,845 npm-debug.log.3429750890
04-05-2017  12:10             1,821 offboarding (2).py
16-09-2017  16:48             3,089 offboarding.py
04-05-2017  10:18             1,607 offboarding_1.py
04-05-2017  10:18             1,607 offboarding_old.py
24-04-2017  15:04               186 onboarddata.csv
06-06-2017  15:50            67,616 output.xml
09-05-2017  15:36               838 package.json
03-10-2017  16:54    &lt;DIR&gt;          Public
06-06-2017  15:50           214,263 report.html
13-09-2017  14:34    &lt;DIR&gt;          RESULTS
28-04-2017  12:03               614 router_img2.img
28-04-2017  12:06         1,245,184 router_img3.img
08-05-2017  15:42                44 sample.tcl
03-10-2017  16:50           264,730 sample_ixload_final_http-1-00.log
03-10-2017  16:50            69,708 sample_ixload_final_http-1-01.log
03-10-2017  16:48            69,095 sample_ixload_final_http-2-00.log
18-09-2017  18:21           264,608 sample_ixload_final_http-3-00.log
18-09-2017  18:22           102,156 sample_ixload_final_http-3-01.log
17-09-2017  15:05            51,587 sample_ixload_final_http.tcl
17-09-2017  15:49            51,587 sample_ixload_final_http_12.tcl
03-10-2017  17:20            36,627 serverexpress.js
02-05-2017  15:55            15,694 serverexpress_old.js
05-05-2017  15:56               452 setup_ixload_paths.tcl
03-10-2017  16:38                16 Test.txt
06-06-2017  15:05               185 testcases.txt
03-05-2017  14:17             1,816 upload_image - devstack_mitaka.py
03-05-2017  14:17             1,816 upload_image.py
08-06-2017  14:49             6,880 upload_image_flavour - copy.py
19-09-2017  11:34             6,945 upload_image_flavour.py
03-05-2017  15:10             3,484 upload_image_flavour_old.py
28-04-2017  12:06         1,245,184 vyatta.img
11-09-2017  15:03             4,706 vyatta.xml
07-06-2017  15:11                27 Vyos.txt
26-04-2017  12:31       256,114,688 vyos_dhcp.img
26-04-2017  12:31       256,114,688 vyos_dhcp_1.qcow2
26-04-2017  12:31       256,114,688 vyos_dhcp_2.qcow2
26-04-2017  12:31       256,114,688 vyos_dhcp_3.qcow2
26-04-2017  12:31       256,114,688 vyos_dhcp_6.qcow2
17-09-2017  14:09                28 Vyos_large.txt
07-06-2017  18:08                26 Vyos_medium.txt
07-06-2017  18:08                26 Vyos_small.txt
07-06-2017  18:08                26 Vyos_tiny.txt
              54 File(s)  1,284,577,692 bytes
               8 Dir(s)   8,697,245,696 bytes free</msg>
<status status="PASS" endtime="20171003 17:24:18.420" starttime="20171003 17:24:18.419"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>tclsh85 sample_ixload_final_http_12.tcl</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:24:18.423" level="INFO">Running command 'tclsh85 sample_ixload_final_http_12.tcl 2&gt;&amp;1'.</msg>
<msg timestamp="20171003 17:28:05.759" level="INFO">${output} = statCollectorUtils package version = 8.10.0.300
Monitor thread started IMMonitor Event Thread
DhcpPlugin-clcs, Version=6.70.27.19, Culture=neutral, PublicKeyToken=null
Ixia.Aptixia.StackManager.Client...</msg>
<status status="PASS" endtime="20171003 17:28:05.759" starttime="20171003 17:24:18.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20171003 17:28:05.760" level="INFO">statCollectorUtils package version = 8.10.0.300
Monitor thread started IMMonitor Event Thread
DhcpPlugin-clcs, Version=6.70.27.19, Culture=neutral, PublicKeyToken=null
Ixia.Aptixia.StackManager.Client, Version=6.70.420.340, Culture=neutral, PublicKeyToken=null
PppoxPlugin, Version=6.70.119.125, Culture=neutral, PublicKeyToken=null
ixLfpPlugin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
ixFCPlugin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
ImpairPlugin-clcs, Version=6.70.13.28, Culture=neutral, PublicKeyToken=null
StackManager, Version=6.70.420.340, Culture=neutral, PublicKeyToken=null
PppoxPlugin-clcs, Version=6.70.119.125, Culture=neutral, PublicKeyToken=null
DhcpPlugin-clcs, Version=6.70.27.19, Culture=neutral, PublicKeyToken=null
IPSecPlugin-clcs, Version=6.70.0.104, Culture=neutral, PublicKeyToken=null
IxLoadStackManagerPlugin-clcs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
StackManager, Version=6.70.420.340, Culture=neutral, PublicKeyToken=null
****************** TEST SERVER INIT **********************
*Debug 10/03 17:24:29.874 ixLogger: Current Date is 10/03/2017
*Warning 10/03 17:24:29.874 MailMessage: 'From' Header is not configured in the header list.
*Warning 10/03 17:24:29.874 MailMessage: 'To' Header is not configured in the header list.
*Info 10/03 17:24:33.460 IxLoad-api: Validating that 192.168.31.42 has a valid network address.
*Info 10/03 17:24:33.460 IxLoad-api: Chassis 192.168.31.42 has a valid network address.
*Info 10/03 17:24:33.461 IxLoad-api: Validating that 192.168.31.42 accepts incoming connections. Will try to connect for 10 seconds.
*Info 10/03 17:24:34.582 IxLoad-api: Validation for 192.168.31.42 is completed. IP is valid and connection succeeded.
*Info 10/03 17:24:34.584 IxLoad-api: Connecting to chassis 192.168.31.42
*Info 10/03 17:24:36.516 IxLoad-api: Connected successfully to the chassis 192.168.31.42
*Info 10/03 17:24:38.345 IxLoad-api: Initializing Sdm Service. Searching for free port...
*Warning 10/03 17:24:40.938 IxLoad-api: SDM service listening port is now: 8050.
*Warning 10/03 17:24:43.260 IxLoad-api: The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Warning 10/03 17:24:43.453 IxLoad-api: The number of Simulated Users configured (20000) is greater than the total IPv4 Pool Size (1) for activity 'HTTPClient1' in Client Traffic-Network Mapping 'Traffic1@Network1'. Some users will use the same addresses as others.
*Warning 10/03 17:24:43.480 IxLoad-api: The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Info 10/03 17:24:43.778 IxLoad-api: Successfully took ownership on the ports [[1, 1, 5]]
*Info 10/03 17:24:43.977 IxLoad-api: Tearing down all network interfaces started...
*Info 10/03 17:24:44.3 IxLoad-api: Tearing down all interfaces completed...
*Info 10/03 17:24:44.177 IxLoad-api: Reset mode defaults completed successfully on the ports [(1,1,5)]
*Info 10/03 17:24:44.216 IxLoad-api: Verifying license availability for test Test1...
*Info 10/03 17:24:44.357 IxLoad-api: Checking out license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42'] ...
*Info 10/03 17:24:44.361 IxLoad-api: License check out succeeded for test Test1
*Info 10/03 17:24:44.361 IxLoad-api: Checking in license for test Test1...
*Info 10/03 17:24:44.362 IxLoad-api: Checking in license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42']...
*Info 10/03 17:24:44.364 IxLoad-api: License check in succeeded for test Test1.

*Info 10/03 17:24:44.365 IxLoad-api: License availability verification succeeded for test Test1.
*Info 10/03 17:24:47.220 IxLoad-api: Downloading packages 'IxLoad_framework_kone, clockwork, ixTcpStack_cc, stackAdapter, ixStackAdapter, koneLib, libksessl_http, httpClient_quick' for community 'Traffic1@Network1'
*Info 10/03 17:24:49.967 IxLoad-api: Starting network Validate Configuration
*Info 10/03 17:24:50.132 IxLoad-api: Port Group (Network1) : Ownership taken
*Info 10/03 17:24:50.641 IxLoad-api: MacSessionData : Validated
*Info 10/03 17:24:50.641 IxLoad-api: IxLoadSessionData : Validated
*Info 10/03 17:24:50.642 IxLoad-api: Meshing (Meshing-1) : Validated
*Info 10/03 17:24:50.645 IxLoad-api: IPSecSessionData : Validated
*Info 10/03 17:24:50.647 IxLoad-api: IpSessionData : Validated
*Info 10/03 17:24:50.648 IxLoad-api: Ethernet (Ethernet-1) : Validated
*Info 10/03 17:24:50.651 IxLoad-api: TCP (TCP-2) : Validated
*Info 10/03 17:24:50.653 IxLoad-api: DNS (DNS-2) : Validated
*Info 10/03 17:24:50.655 IxLoad-api: Filter (Filter-1) : Validated
*Info 10/03 17:24:50.657 IxLoad-api: Settings (Settings-2) : Validated
*Info 10/03 17:24:50.670 IxLoad-api: MAC/VLAN (MAC/VLAN-1) : Validated
*Info 10/03 17:24:50.671 IxLoad-api: GratARP (GratARP-1) : Validated
*Info 10/03 17:24:50.694 IxLoad-api: IP (IP-1) : Validated
*Info 10/03 17:24:50.696 IxLoad-api: Received callback from SM session Validate Config
*Info 10/03 17:24:50.772 IxLoad-api: Starting network configuration
*Info 10/03 17:24:50.773 IxLoad-api: Network validated successfully
*Info 10/03 17:24:50.775 IxLoad-api: Async Configure Network on Traffic1@Network1
*Info 10/03 17:24:50.778 IxLoad-api: Network Session : Configuring
*Info 10/03 17:24:50.779 IxLoad-api: Network Session : Configured
*Info 10/03 17:24:51.38 IxLoad-api: Applying traffic configuration for the community Traffic1@Network1
*Info 10/03 17:24:51.496 IxLoad-api: Ethernet (Ethernet-1) : Configured
*Info 10/03 17:24:52.539 IxLoad-api: IP (IP-1) : Partially Configured
*Info 10/03 17:24:52.549 IxLoad-api: Filter (Filter-1) : Configured statistics
*Info 10/03 17:24:52.551 IxLoad-api: TCP (TCP-2) : Configured statistics
*Info 10/03 17:24:52.551 IxLoad-api: DNS (DNS-2) : Configured statistics
*Info 10/03 17:24:52.552 IxLoad-api: MAC/VLAN (MAC/VLAN-1) : Configured statistics
*Info 10/03 17:24:52.552 IxLoad-api: IPSecSessionData : Configured
*Info 10/03 17:24:52.558 IxLoad-api: Meshing (Meshing-1) : Configured
*Info 10/03 17:24:52.559 IxLoad-api: GratARP (GratARP-1) : Configured
*Info 10/03 17:24:52.650 IxLoad-api: IP (IP-1) : Negotiated
*Info 10/03 17:24:52.851 IxLoad-api: GratARP (GratARP-1) : Configured
*Info 10/03 17:24:52.877 IxLoad-api: Port Group (Network1) : Layer 7 Enabled
*Info 10/03 17:24:52.878 IxLoad-api: OK - Meshing (Meshing-1) : Enabling Traffic
*Info 10/03 17:24:53.88 IxLoad-api: Meshing (Meshing-1) : Traffic Enabled
*Info 10/03 17:24:53.144 IxLoad-api: Network configured successfully
*Info 10/03 17:26:25.907 IxLoad-api: Reset link on link down ports [(1,1,5)] ...
*Info 10/03 17:26:56.242 IxLoad-api: Reset link on link down ports [(1,1,5)] ...
*Info 10/03 17:27:26.801 IxLoad-api: Reset link on link down ports [(1,1,5)] ...
*Error 10/03 17:27:57.302 IxLoad-api: IxLoad can not start the traffic because the link is down on the following ports [(1,1,5)]. Please fix the link state on these ports and start the test to resume.
eventType TEST_STOPPED status ERROR description {1} message {IxLoad can not start the traffic because the link is down on the following ports [(1,1,5)]. Please fix the link state on these ports and start the test to resume.}
*Info 10/03 17:27:58.365 IxLoad-api: Cleaning traffic and network configuration for the community Traffic1@Network1 on port(s) [(1,1,5)]
*Info 10/03 17:27:58.773 IxLoad-api: Cleaning up activities for community Traffic1@Network1
*Info 10/03 17:27:58.775 IxLoad-api: Cleaning network Network1 configuration on the ports - [(1,1,5)]
*Info 10/03 17:28:00.288 IxLoad-api: Tearing down all network interfaces started...
*Info 10/03 17:28:00.290 IxLoad-api: Network Session : Deconfiguring
*Info 10/03 17:28:00.292 IxLoad-api: IpSessionData : Deconfiguring Done
*Info 10/03 17:28:00.292 IxLoad-api: MacSessionData : Deconfiguring Done
*Info 10/03 17:28:00.292 IxLoad-api: IxLoadSessionData : Deconfiguring Done
*Info 10/03 17:28:00.499 IxLoad-api: IPSecSessionData : Deconfiguring Done
*Info 10/03 17:28:00.500 IxLoad-api: IP-R (IP-R1) : Deconfiguring Done
*Info 10/03 17:28:00.500 IxLoad-api: GratARP (GratARP-1) : Package unloading Done
*Info 10/03 17:28:00.717 IxLoad-api: MAC-R (MAC-R1) : Deconfiguring Done
*Info 10/03 17:28:00.720 IxLoad-api: Meshing (Meshing-1) : Package unloading Done
*Info 10/03 17:28:00.721 IxLoad-api: IP (IP-1) : Package unloading Done
*Info 10/03 17:28:01.372 IxLoad-api: MAC/VLAN (MAC/VLAN-1) : Package unloading Done
*Info 10/03 17:28:01.374 IxLoad-api: TCP (TCP-2) : Package unloading Done
*Info 10/03 17:28:01.374 IxLoad-api: Filter (Filter-1) : Package unloading Done
*Info 10/03 17:28:01.375 IxLoad-api: Settings (Settings-2) : Package unloading Done
*Info 10/03 17:28:01.375 IxLoad-api: DNS (DNS-2) : Package unloading Done
*Info 10/03 17:28:01.375 IxLoad-api: Ethernet (Ethernet-1) : Package unloading Done
*Info 10/03 17:28:01.377 IxLoad-api: Port Group (Network1) : Deconfiguring Done
*Info 10/03 17:28:01.377 IxLoad-api: Tearing down all network interfaces completed...
*Info 10/03 17:28:01.394 IxLoad-api: Deleting downloaded packages ['httpClient_quick', 'libksessl_http', 'koneLib', 'ixStackAdapter', 'stackAdapter', 'ixTcpStack_cc', 'clockwork', 'IxLoad_framework_kone'] on ports [(1,1,5)]
*Info 10/03 17:28:02.611 IxLoad-api: Successfully cleared ownership on ports [[1, 1, 5]]
eventType TEST_STOPPED status ERROR description {1} message {IxLoad can not start the traffic because the link is down on the following ports [(1,1,5)]. Please fix the link state on these ports and start the test to resume.}</msg>
<status status="PASS" endtime="20171003 17:28:05.761" starttime="20171003 17:28:05.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20171003 17:28:10.761" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20171003 17:28:10.761" starttime="20171003 17:28:05.761"></status>
</kw>
<kw name="Validate Packet Loss Openstack" library="VerizonDemo">
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20171003 17:28:10.764" level="INFO">Http Failed percentage is 100.00</msg>
<msg timestamp="20171003 17:28:10.764" level="INFO">${output} = True</msg>
<status status="PASS" endtime="20171003 17:28:10.764" starttime="20171003 17:28:10.761"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<status status="PASS" endtime="20171003 17:28:10.765" starttime="20171003 17:28:10.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20171003 17:28:13.766" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20171003 17:28:13.766" starttime="20171003 17:28:10.766"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>show interfaces ethernet eth0</arg>
</arguments>
<msg timestamp="20171003 17:28:13.771" level="INFO">show interfaces ethernet eth0</msg>
<status status="PASS" endtime="20171003 17:28:13.771" starttime="20171003 17:28:13.766"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output_eth0}</var>
</assign>
<msg timestamp="20171003 17:28:13.883" level="INFO">[?1h=eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:cc:2e:d6 brd ff:ff:ff:ff:ff:ff[m
    inet 10.53.173.210/24 brd 10.53.173.255 scope global eth0[m
       valid_lft forever preferred_lft forever[m
    inet6 fe80::f816:3eff:fecc:2ed6/64 scope link [m
       valid_lft forever preferred_lft forever[m
[m
    RX:  bytes    packets     errors    dropped    overrun      mcast[m
        254492       1563          0          0          0          0[m
    TX:  bytes    packets     errors    dropped    carrier collisions[m
        114562        901          0          0          0          0[m
[K[?1l&gt;vyos@vyos:~$</msg>
<msg timestamp="20171003 17:28:13.883" level="INFO">${output_eth0} = [?1h=eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:cc:2e:d6 brd ff:ff:ff:ff:ff:ff[m
    inet 10.53.173.210/24...</msg>
<status status="PASS" endtime="20171003 17:28:13.883" starttime="20171003 17:28:13.772"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>show interfaces ethernet eth1</arg>
</arguments>
<msg timestamp="20171003 17:28:13.885" level="INFO">show interfaces ethernet eth1</msg>
<status status="PASS" endtime="20171003 17:28:13.885" starttime="20171003 17:28:13.883"></status>
</kw>
<kw name="Read Until Prompt" library="SSHLibrary">
<doc>Consumes and returns the server output until the prompt is found.</doc>
<assign>
<var>${output_eth1}</var>
</assign>
<msg timestamp="20171003 17:28:13.998" level="INFO">[?1h=eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:7b:86:89 brd ff:ff:ff:ff:ff:ff[m
    inet 10.72.24.100/24 brd 10.72.24.255 scope global eth1[m
       valid_lft forever preferred_lft forever[m
    inet6 fe80::f816:3eff:fe7b:8689/64 scope link [m
       valid_lft forever preferred_lft forever[m
[m
    RX:  bytes    packets     errors    dropped    overrun      mcast[m
           948         12          0          0          0          0[m
    TX:  bytes    packets     errors    dropped    carrier collisions[m
           728          6          0          0          0          0[m
[K[?1l&gt;vyos@vyos:~$</msg>
<msg timestamp="20171003 17:28:13.998" level="INFO">${output_eth1} = [?1h=eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group[m  default qlen 1000[m
    link/ether fa:16:3e:7b:86:89 brd ff:ff:ff:ff:ff:ff[m
    inet 10.72.24.100/24 ...</msg>
<status status="PASS" endtime="20171003 17:28:13.998" starttime="20171003 17:28:13.885"></status>
</kw>
<kw name="Packets Capture" library="VerizonDemo">
<arguments>
<arg>${output_eth0}</arg>
</arguments>
<assign>
<var>${receiving_packets_eth0_after}</var>
<var>${transmission_packets_eth0_after}</var>
</assign>
<msg timestamp="20171003 17:28:13.999" level="INFO">${receiving_packets_eth0_after} = 901</msg>
<msg timestamp="20171003 17:28:13.999" level="INFO">${transmission_packets_eth0_after} = 1563</msg>
<status status="PASS" endtime="20171003 17:28:13.999" starttime="20171003 17:28:13.999"></status>
</kw>
<kw name="Packets Capture" library="VerizonDemo">
<arguments>
<arg>${output_eth1}</arg>
</arguments>
<assign>
<var>${receiving_packets_eth1_after}</var>
<var>${transmission_packets_eth1_after}</var>
</assign>
<msg timestamp="20171003 17:28:14.000" level="INFO">${receiving_packets_eth1_after} = 6</msg>
<msg timestamp="20171003 17:28:14.000" level="INFO">${transmission_packets_eth1_after} = 12</msg>
<status status="PASS" endtime="20171003 17:28:14.000" starttime="20171003 17:28:13.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${receiving_packets_eth0_after}-${receiving_packets_eth0_before}</arg>
</arguments>
<assign>
<var>${diff_packets_eth0_rx}</var>
</assign>
<msg timestamp="20171003 17:28:14.000" level="INFO">${diff_packets_eth0_rx} = 213</msg>
<status status="PASS" endtime="20171003 17:28:14.000" starttime="20171003 17:28:14.000"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${transmission_packets_eth0_after}-${transmission_packets_eth0_before}</arg>
</arguments>
<assign>
<var>${diff_packets_eth0_tx}</var>
</assign>
<msg timestamp="20171003 17:28:14.001" level="INFO">${diff_packets_eth0_tx} = 182</msg>
<status status="PASS" endtime="20171003 17:28:14.001" starttime="20171003 17:28:14.000"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${receiving_packets_eth1_after}-${receiving_packets_eth1_before}</arg>
</arguments>
<assign>
<var>${diff_packets_eth1_rx}</var>
</assign>
<msg timestamp="20171003 17:28:14.002" level="INFO">${diff_packets_eth1_rx} = 0</msg>
<status status="PASS" endtime="20171003 17:28:14.002" starttime="20171003 17:28:14.001"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${transmission_packets_eth1_after}-${transmission_packets_eth1_before}</arg>
</arguments>
<assign>
<var>${diff_packets_eth1_tx}</var>
</assign>
<msg timestamp="20171003 17:28:14.002" level="INFO">${diff_packets_eth1_tx} = 0</msg>
<status status="PASS" endtime="20171003 17:28:14.002" starttime="20171003 17:28:14.002"></status>
</kw>
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20171003 17:28:14.116" starttime="20171003 17:28:14.002"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>delete_interfaces</arg>
</arguments>
<status status="PASS" endtime="20171003 17:28:14.117" starttime="20171003 17:28:14.116"></status>
</kw>
<status status="PASS" endtime="20171003 17:28:14.117" critical="yes" starttime="20171003 17:24:15.057"></status>
</test>
<status status="PASS" endtime="20171003 17:28:14.118" starttime="20171003 17:24:12.368"></status>
</suite>
<status status="PASS" endtime="20171003 17:28:14.121" starttime="20171003 17:24:12.330"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Scripts" pass="2">Scripts</stat>
<stat fail="0" id="s1-s1" name="Verizon OpenStack" pass="2">Scripts.Verizon OpenStack</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
