
################################################################################
## 10/03/2017 17:24:33: Log Start PID=10168
################################################################################

*Info 10/03 17:24:33.460 Chassis Chain: Validating that 192.168.31.42 has a valid network address.
*Info 10/03 17:24:33.460 Chassis Chain: Chassis 192.168.31.42 has a valid network address.
*Info 10/03 17:24:33.460 Chassis Chain: Validating that 192.168.31.42 accepts incoming connections. Will try to connect for 10 seconds.
*Debug 10/03 17:24:34.579 Chassis Chain: IxLoad encountered the following error when connecting to chassis 192.168.31.42 : No connection could be made because the target machine actively refused it.
*Info 10/03 17:24:34.581 Chassis Chain: Validation for 192.168.31.42 is completed. IP is valid and connection succeeded.
*Info 10/03 17:24:34.582 ixChassis 192.168.31.42: Connecting to chassis 192.168.31.42
*Debug 10/03 17:24:34.585 ixChassis 192.168.31.42: Starting Async Callback
*Debug 10/03 17:24:34.586 ixChassis 192.168.31.42: Blocking for response, this is a wizard, tcl api callback or apply config or start run scenario
*Debug 10/03 17:24:35.382 ixChassis 192.168.31.42: Async callback received -- callbackEstablishConnection
*Debug 10/03 17:24:35.388 ixChassis 192.168.31.42: Chassis 192.168.31.42 installs IxOS 8.10.1250.8 EA-PATCH1
*Debug 10/03 17:24:35.588 ixChassis 192.168.31.42: Blocking for response, this is a wizard, tcl api callback or apply config or start run scenario
*Debug 10/03 17:24:35.809 ixChassis 192.168.31.42: Chassis 192.168.31.42 installs IxOS 8.10.1250.8 EA-PATCH1
*Debug 10/03 17:24:36.111 ixChassis 192.168.31.42: Card = 1, name = Xcellon-Ultra NP, number of ports = 13
*Debug 10/03 17:24:36.466 ixPort Port 1.1.1: port (1,1,1) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.467 ixPort Port 1.1.2: port (1,1,2) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.469 ixPort Port 1.1.3: port (1,1,3) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.470 ixPort Port 1.1.4: port (1,1,4) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.470 ixPort Port 1.1.5: port (1,1,5) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.471 ixPort Port 1.1.6: port (1,1,6) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.473 ixPort Port 1.1.7: port (1,1,7) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.473 ixPort Port 1.1.8: port (1,1,8) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.474 ixPort Port 1.1.9: port (1,1,9) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.476 ixPort Port 1.1.10: port (1,1,10) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.476 ixPort Port 1.1.11: port (1,1,11) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.477 ixPort Port 1.1.12: port (1,1,12) operationModesMap={0: True, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.479 ixPort Port 1.1.13: port (1,1,13) operationModesMap={0: False, 1: True, 2: False, 3: False, 4: False, 8: False}
*Debug 10/03 17:24:36.479 ixChassis 192.168.31.42: Card = 2, name = slot empty, number of ports = 0
*Debug 10/03 17:24:36.499 Chassis Chain: Creating chassis watch. Monitoring for event mask 7
*Info 10/03 17:24:36.516 ixChassis 192.168.31.42: Connected successfully to the chassis 192.168.31.42
*Debug 10/03 17:24:36.519 Chassis Chain: BLOCK = True
*Debug 10/03 17:24:36.555 Chassis Chain: Total wait time for ports to link up = 0.0, max wait time = 30
*Debug 10/03 17:24:36.588 Chassis Chain: chassis 192.168.31.42 connect return as 192.168.31.42
*Debug 10/03 17:24:36.588 Chassis Chain: addChassis hwMismatchChassis=[]
*Debug 10/03 17:24:37.154 ixViewOptions : ixViewOptions initialised successfully
*Debug 10/03 17:24:37.158 NetTraffic None@None: ###### CHANGED None@None:
*Debug 10/03 17:24:37.158 NetTraffic None@None:        None@None Acceleration Throughput from: True to: False
*Console 10/03 17:24:37.160 : !!WARNING!! Creating network group with no chassis chain!!!
*Debug 10/03 17:24:37.168 Test Server: ##### statManagerAddPorts [(1,1,5)]
*Debug 10/03 17:24:37.168 Test Server: ##### port path 192.168.31.42/Card1/Port5
*Debug 10/03 17:24:37.168 Test Server: AddPorts ['192.168.31.42/Card1/Port5'] to stat manager
*Debug 10/03 17:24:37.170 Test Server: ##### PortList.Add 192.168.31.42/Card1/Port5
*Debug 10/03 17:24:37.170 Test Server: ##### action AddPorts
*Console 10/03 17:24:37.171 : CREATING A PORT GROUP ON DEMAND
*Console 10/03 17:24:37.188 : Created port group with object id '06e8836e-7b9c-4d97-9cb0-e510e229c5a5'
*Debug 10/03 17:24:37.476 ixNetProxy : convertValue failed for key name. Returning defaultValue
*Debug 10/03 17:24:37.480 Activity newAgent1: convertValue failed for key _tcl. Returning defaultValue
*Debug 10/03 17:24:37.874 Port Event Viewer: _createPlugin: classname=DI_ErrorsClasses namespace=IxLoad.Protocols.HTTP_Client.HTTP_Events filename=Plugins\agent\HTTP_Client\HTTPClient.UI.dll
*Debug 10/03 17:24:37.895 Port Event Viewer: EventClassManager.PluginActionEvent EVENT_CLASS_REGISTRATION RegisterEventClassData { IsRegistering=True, EventClassId=0 }
*Debug 10/03 17:24:37.898 Port Event Viewer: registerPluginsForAgent: DI_ErrorsClasses IxLoad.Protocols.HTTP_Client.HTTP_Events Plugins\agent\HTTP_Client\HTTPClient.UI.dll refcount=1
*Debug 10/03 17:24:37.901 ixPluginServicesRegistry: unregistered all of the activities - _providerDict={}
*Debug 10/03 17:24:37.901 ixPluginServicesRegistry: registered activity HTTPClient1 - _providerDict={}
*Debug 10/03 17:24:37.901 NetTraffic Traffic1@Network1: Community Traffic1@Network1 changing role from None to Client
*Debug 10/03 17:24:37.901 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 10/03 17:24:37.901 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Console 10/03 17:24:37.926 : SYNC: Network1 @ Tue Oct 03 17:24:37 2017 - duration - 0.0220000743866
*Debug 10/03 17:24:37.930 Activity HTTPClient1: convertValue failed for key _tcl. Returning defaultValue
*Debug 10/03 17:24:37.934 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 10/03 17:24:37.934 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Debug 10/03 17:24:37.936 NetTraffic Traffic1@Network1: Activity HTTPClient1 returned default port map policy : portPairs
*Debug 10/03 17:24:37.936 NetTraffic Traffic1@Network1: Final default port map policy : portPairs
*Debug 10/03 17:24:37.937 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 10/03 17:24:37.937 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: True to: False
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: False to: True
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1:        Traffic1@Network1 Acceleration Throughput from: False to: True
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1: ###### CHANGED Traffic1@Network1:
*Debug 10/03 17:24:37.938 NetTraffic Traffic1@Network1:        Traffic1@Network1 Performance Acceleration from: False to: True
*Debug 10/03 17:24:37.940 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 10/03 17:24:37.947 Stat Controller: INITIALIZING THE STAT CONTROLLER.
*Debug 10/03 17:24:37.950 Stat Controller: Stat viewer instance ID = ixload_1
*Debug 10/03 17:24:37.950 Stat Controller: __initTestServer () ends
*Debug 10/03 17:24:37.951 Stat Controller: Registering login name IxLoad/S1/INBASDPC12364/Vinoy for aptixia default views
*Debug 10/03 17:24:37.976 Stat Controller: Registering for PathResolutionEvent
*Debug 10/03 17:24:37.979 Stat Controller: svCleanup() starts
*Debug 10/03 17:24:37.980 Stat Controller: svCleanup() Entities count=1
*Debug 10/03 17:24:38.61 Stat Controller: svCleanup() finishes
*Debug 10/03 17:24:38.62 Test Controller : statWrapper_timeout = 1800
*Debug 10/03 17:24:38.63 Test Controller : Creating the TestController FSM Thread
*Debug 10/03 17:24:38.88 ixFSM: 
  *** FSM Test Controller ENTERING STATE  TestController: UNCONFIGURED                     
*Debug 10/03 17:24:38.88 Test Controller: getFSMEvent(): Thread FSM Object not created for this thread!
*Debug 10/03 17:24:38.88 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:38.88 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:24:38.88 Test Controller:  PUBLISHING STATE : [ TestController: UNCONFIGURED                    ]
*Debug 10/03 17:24:38.88 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:38.119 Test Controller: Test Controller FSM: ENTRY Action for the State: UNCONFIGURED
*Debug 10/03 17:24:38.119 Test Controller : TEST CONTROLLER: Clearing all Stat Plugins map.
*Debug 10/03 17:24:38.119 Test Controller : clearStatPlugins(): Successfully CLEARED all the statistics plugins.
*Debug 10/03 17:24:38.119 Test Controller : set resultFolderCreatedAtApplyConfig to False
*Debug 10/03 17:24:38.119 Test Controller: Disconnecting from the stat-engine
*Debug 10/03 17:24:38.198 Stat Controller: STAT CONTROLLER: disconnectFromAllSources()
*Debug 10/03 17:24:38.198 Stat Controller: disconnectFromAllSources[618185680]: Disconnecting from []
*Debug 10/03 17:24:38.198 Stat Controller: disconnectFromAllSources[618185680]: Done!
*Debug 10/03 17:24:38.198 Stat Controller: Resetting stat threads
*Debug 10/03 17:24:38.200 IxAnalyzer : Analyzer - Initialize()...
*Debug 10/03 17:24:38.210 IxAnalyzer : Analyzer stub was created - Analyzer.CAnalyzerImpl
*Debug 10/03 17:24:38.280 IxAnalyzer : Analyzer - Initialize() returned 0
*Debug 10/03 17:24:38.282 IxAnalyzer : Analyzer - SetLiceseServer2(licenseServerName=', 'useExternalServer='True')...
*Debug 10/03 17:24:38.282 IxAnalyzer : Analyzer - SetLiceseServer2 returned 0
*Debug 10/03 17:24:38.282 IxAnalyzer : Analyzer - registering OnCaptureStatusChanged callback function for the capture view
*Debug 10/03 17:24:38.283 IxAnalyzer : Analyzer - registering OnErrorNotification callback function for the capture view
*Debug 10/03 17:24:38.286 IxAnalyzer : Analyzer - registering the callback functions succeeded
*Debug 10/03 17:24:38.286 IxAnalyzer : Analyzer - Initialized successfully
*Debug 10/03 17:24:38.286 IxAnalyzer : Analyzer - set test state - 0
*Debug 10/03 17:24:38.305 ixEvent: Adding subscriber: <bound method ixTestController._callbackFsmAppStateName of <Lib.TestController.ixTestController.ixTestController object at 0x24D8C2B0>> - im_self <Lib.TestController.ixTestController.ixTestController object at 0x24D8C2B0>; im_func <function _callbackFsmAppStateName at 0x0E59EE30>
*Debug 10/03 17:24:38.305 Test Controller: updateSubscribers() ixTestPreStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 10/03 17:24:38.305 Test Controller: updateSubscribers() ixTestStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 10/03 17:24:38.341 Stat Controller: Registering for StatRequestReadyEventHandler
*Console 10/03 17:24:38.342 : self.__testController: <Lib.TestController.ixTestController.ixTestController object at 0x24D8C2B0>
*Console 10/03 17:24:38.342 : done
*Info 10/03 17:24:38.342 Test Controller : Initializing Sdm Service. Searching for free port...
*Debug 10/03 17:24:38.663 Chassis Chain: Received chassis watch 192.168.31.42 - eventType: 2, oldValue: 1, newValue 1 err None
*Debug 10/03 17:24:38.839 Chassis Chain: ChassisManager:isInitEvent method. CurrentValue not in xml format: 1
*Warning 10/03 17:24:40.938 CalSdmService: SDM service listening port is now: 8050.
*Debug 10/03 17:24:42.970 Test Controller : Test Controller Initialization Completed Successfully.
*Debug 10/03 17:24:42.976 Test Controller: updateSubscribers() ixTestPreStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Debug 10/03 17:24:42.976 Test Controller : ixRunStateHandler received event  TestController: UNCONFIGURED                    
*Debug 10/03 17:24:42.976 Test Controller : ixRunStateHandler not running or cleaning. Exiting
*Debug 10/03 17:24:42.976 Test Controller: updateSubscribers() ixTestStateEvent(testName = Unknown, eventID= None, stateName =  TestController: UNCONFIGURED                    
*Console 10/03 17:24:42.976 : Initializing TCLApiTestController
*Debug 10/03 17:24:42.977 Test Controller : releaseConfigWaitFinish: releasing configuration.
*Debug 10/03 17:24:42.986 Stat Controller: svCleanup() starts
*Debug 10/03 17:24:42.986 Stat Controller: svCleanup() Entities count=1
*Debug 10/03 17:24:42.990 Stat Controller: svCleanup() finishes
*Debug 10/03 17:24:42.990 Stat Controller: Api.clearStats() called. Watches = []
*Debug 10/03 17:24:42.993 Stat Controller: Api.clearStats() called. Watches = [u'statcollectornetwork', u'statcollectorutils']
*Debug 10/03 17:24:42.993 Stat Controller:   Api.clearStats removing stat watch statcollectornetwork
*Debug 10/03 17:24:42.994 Stat Controller:   Api.clearStats removing stat watch statcollectorutils
*Debug 10/03 17:24:42.994 Test: Clear gridStats
*Debug 10/03 17:24:43.3 Stat Controller: Api.addStat: Adding Stat HTTP Requests Sent
*Debug 10/03 17:24:43.3 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful
*Debug 10/03 17:24:43.3 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (Provisional)
*Debug 10/03 17:24:43.5 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed
*Debug 10/03 17:24:43.5 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Write)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Read)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Bad Header)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (400)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (401)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (403)
*Debug 10/03 17:24:43.6 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (404)
*Debug 10/03 17:24:43.7 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (407)
*Debug 10/03 17:24:43.7 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (408)
*Debug 10/03 17:24:43.7 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx other)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (505)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx other)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (other)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Timeout)
*Debug 10/03 17:24:43.9 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Aborted)
*Debug 10/03 17:24:43.10 Stat Controller: Api.addStat: Adding Stat HTTP Aborted Before Request
*Debug 10/03 17:24:43.10 Stat Controller: Api.addStat: Adding Stat HTTP Aborted After Request
*Debug 10/03 17:24:43.10 Stat Controller: Api.addStat: Adding Stat HTTP Responses Received With Match
*Debug 10/03 17:24:43.10 Stat Controller: Api.addStat: Adding Stat HTTP Responses Received Without Match
*Debug 10/03 17:24:43.12 Stat Controller: Api.addStat: Adding Stat HTTP Intermediate Responses Received (1xx)
*Debug 10/03 17:24:43.12 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (2xx)
*Debug 10/03 17:24:43.12 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (3xx)
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (301)
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (302)
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (303)
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (307)
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Requests Sent
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Headers Received
*Debug 10/03 17:24:43.13 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Responses Successful
*Debug 10/03 17:24:43.15 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Responses Failed
*Debug 10/03 17:24:43.15 Stat Controller: Api.addStat: Adding Stat HTTP Total Chunks Received
*Debug 10/03 17:24:43.15 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunk Size
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunks per Response
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat HTTP Chunk Encoded Requests Sent
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat HTTP Total Chunks Sent
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunk Size in Request
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat HTTP Average Chunks per Request
*Debug 10/03 17:24:43.16 Stat Controller: Api.addStat: Adding Stat Name1-Value1
*Debug 10/03 17:24:43.17 Stat Controller: Api.addStat: Adding Stat Counter1
*Debug 10/03 17:24:43.17 Stat Controller: Api.addStat: Adding Stat Name2-Value2
*Debug 10/03 17:24:43.17 Stat Controller: Api.addStat: Adding Stat Counter2
*Debug 10/03 17:24:43.17 Stat Controller: Api.addStat: Adding Stat Name3-Value3
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Counter3
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Name4-Value4
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Counter4
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Name5-Value5
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Counter5
*Debug 10/03 17:24:43.19 Stat Controller: Api.addStat: Adding Stat Name6-Value6
*Debug 10/03 17:24:43.20 Stat Controller: Api.addStat: Adding Stat Counter6
*Debug 10/03 17:24:43.20 Stat Controller: Api.addStat: Adding Stat Name7-Value7
*Debug 10/03 17:24:43.20 Stat Controller: Api.addStat: Adding Stat Counter7
*Debug 10/03 17:24:43.20 Stat Controller: Api.addStat: Adding Stat Name8-Value8
*Debug 10/03 17:24:43.22 Stat Controller: Api.addStat: Adding Stat Counter8
*Debug 10/03 17:24:43.22 Stat Controller: Api.addStat: Adding Stat Name9-Value9
*Debug 10/03 17:24:43.22 Stat Controller: Api.addStat: Adding Stat Counter9
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat Name10-Value10
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat Counter10
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Received
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Successful
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat HTTP Gzip-Encoded Responses Failed
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Received
*Debug 10/03 17:24:43.23 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Successful
*Debug 10/03 17:24:43.25 Stat Controller: Api.addStat: Adding Stat HTTP Deflate-Encoded Responses Failed
*Debug 10/03 17:24:43.25 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Received
*Debug 10/03 17:24:43.25 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Successful
*Debug 10/03 17:24:43.25 Stat Controller: Api.addStat: Adding Stat HTTP Content-MD5 Responses Failed
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Received
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Successful
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Custom MD5 Responses Failed
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat Average Compression Ratio
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Simulated Users
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Concurrent Connections
*Debug 10/03 17:24:43.26 Stat Controller: Api.addStat: Adding Stat HTTP Connections
*Debug 10/03 17:24:43.28 Stat Controller: Api.addStat: Adding Stat HTTP Connection Attempts
*Debug 10/03 17:24:43.28 Stat Controller: Api.addStat: Adding Stat HTTP Connection Aborts
*Debug 10/03 17:24:43.28 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Aborts
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Transactions
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Bytes
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Requests Sent
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (Provisional)
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Intermediate Responses Received (1xx)
*Debug 10/03 17:24:43.29 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (2xx)
*Debug 10/03 17:24:43.30 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (3xx)
*Debug 10/03 17:24:43.30 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (301)
*Debug 10/03 17:24:43.30 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (302)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (303)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Successful (307)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Write)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Read)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Bad Header)
*Debug 10/03 17:24:43.32 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx)
*Debug 10/03 17:24:43.33 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (400)
*Debug 10/03 17:24:43.33 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (401)
*Debug 10/03 17:24:43.33 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (403)
*Debug 10/03 17:24:43.33 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (404)
*Debug 10/03 17:24:43.35 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (407)
*Debug 10/03 17:24:43.35 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (408)
*Debug 10/03 17:24:43.35 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (4xx other)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (505)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (5xx other)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (other)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Timeout)
*Debug 10/03 17:24:43.36 Stat Controller: Api.addStat: Adding Stat HTTP Requests Failed (Aborted)
*Debug 10/03 17:24:43.38 Stat Controller: Api.addStat: Adding Stat HTTP Session Timeouts (408)
*Debug 10/03 17:24:43.38 Stat Controller: Api.addStat: Adding Stat HTTP Request Precondition Failed (412)
*Debug 10/03 17:24:43.38 Stat Controller: Api.addStat: Adding Stat HTTP Sessions Rejected (503)
*Debug 10/03 17:24:43.38 Stat Controller: Api.addStat: Adding Stat HTTP Aborted Before Request
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat HTTP Aborted After Request
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat HTTP Transactions Active
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat HTTP Users Active
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Received
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Received
*Debug 10/03 17:24:43.39 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Received
*Debug 10/03 17:24:43.40 Stat Controller: Api.addStat: Adding Stat Unrecognized Content-Encoding Received
*Debug 10/03 17:24:43.40 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Decode Successful
*Debug 10/03 17:24:43.40 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Successful
*Debug 10/03 17:24:43.40 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Successful
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Content-Encoded Responses Decode Failed
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed - Data Error
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Gzip Content-Encoding Decode Failed - Decoding Error
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed - Data Error
*Debug 10/03 17:24:43.42 Stat Controller: Api.addStat: Adding Stat Deflate Content-Encoding Decode Failed - Decoding Error
*Debug 10/03 17:24:43.43 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoded Headers Received
*Debug 10/03 17:24:43.43 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Decode Successful
*Debug 10/03 17:24:43.43 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Decode Failed
*Debug 10/03 17:24:43.43 Stat Controller: Api.addStat: Adding Stat Total Chunks Received
*Debug 10/03 17:24:43.45 Stat Controller: Api.addStat: Adding Stat Chunked Transfer-Encoding Headers Sent
*Debug 10/03 17:24:43.45 Stat Controller: Api.addStat: Adding Stat Total Chunks Sent
*Debug 10/03 17:24:43.45 Stat Controller: Api.addStat: Adding Stat Content-MD5 Responses Received
*Debug 10/03 17:24:43.45 Stat Controller: Api.addStat: Adding Stat Content-MD5 Check Successful
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat Content-MD5 Check Failed
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Responses Received
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Check Successful
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat Custom-MD5 Check Failed
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat HTTP Bytes Sent
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat HTTP Bytes Received
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat HTTP Content Bytes Sent
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat HTTP Content Bytes Received
*Debug 10/03 17:24:43.46 Stat Controller: Api.addStat: Adding Stat HTTP Decompressed Content Bytes Received
*Debug 10/03 17:24:43.48 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Received
*Debug 10/03 17:24:43.48 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Sent
*Debug 10/03 17:24:43.48 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected
*Debug 10/03 17:24:43.48 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Path Match Failed)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Domain Match Failed)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Cookiejar Overflow)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Cookies Rejected - (Probabilistic Reject)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Cookie headers Rejected - (Memory Overflow)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Connect Time (us)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Time To First Byte (us)
*Debug 10/03 17:24:43.49 Stat Controller: Api.addStat: Adding Stat HTTP Time To Last Byte (us)
*Debug 10/03 17:24:43.51 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Average (us)
*Debug 10/03 17:24:43.51 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Minimum (us)
*Debug 10/03 17:24:43.51 Stat Controller: Api.addStat: Adding Stat HTTP Old Session Abort Delay - Maximum (us)
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client Total Data Integrity Check Failed
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client Total Data Integrity Check Succeeded
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Data Frames Received
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Header Frames Received
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Priority Frames Received
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Reset Stream Frames Received
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Frames Received
*Debug 10/03 17:24:43.52 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Push Promise Frames Received
*Debug 10/03 17:24:43.53 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Ping Frames Received
*Debug 10/03 17:24:43.53 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Go Away Frames Received
*Debug 10/03 17:24:43.53 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Window Update Frames Received
*Debug 10/03 17:24:43.53 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Continuation Frames Received
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Data Frames Sent
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Header Frames Sent
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Priority Frames Sent
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Reset Stream Frames Sent
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Frames Sent
*Debug 10/03 17:24:43.55 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Push Promise Frames Sent
*Debug 10/03 17:24:43.56 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Ping Frames Sent
*Debug 10/03 17:24:43.56 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Go Away Frames Sent
*Debug 10/03 17:24:43.56 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Window Update Frames Sent
*Debug 10/03 17:24:43.58 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Continuation Frames Sent
*Debug 10/03 17:24:43.58 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Initiated by Client
*Debug 10/03 17:24:43.58 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Initiated by Server
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Succeeded (Client to Server)
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Succeeded (Server to Client)
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Failed (Client to Server)
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Streams Failed (Server to Client)
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connection Upgrade Succeeded
*Debug 10/03 17:24:43.59 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connection Upgrade Failed
*Debug 10/03 17:24:43.61 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Protocol Error
*Debug 10/03 17:24:43.61 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Internal Error
*Debug 10/03 17:24:43.61 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Flow Control Error
*Debug 10/03 17:24:43.61 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Settings Timeout Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Stream Closed Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Frame Size Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Refused Stream Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Stream Cancelled Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Compression Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Connect Error
*Debug 10/03 17:24:43.62 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Enhance Calm Error
*Debug 10/03 17:24:43.63 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 Inadequate Security Error
*Debug 10/03 17:24:43.63 Stat Controller: Api.addStat: Adding Stat HTTP Client HTTP2.0 HTTP1_1 Required Error
*Debug 10/03 17:24:43.63 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received
*Debug 10/03 17:24:43.63 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (close_notify)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (close_notify)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unexpected_message)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unexpected_message)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (bad_record_mac)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (bad_record_mac)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decryption_failed)
*Debug 10/03 17:24:43.65 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decryption_failed)
*Debug 10/03 17:24:43.66 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (record_overflow)
*Debug 10/03 17:24:43.66 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (record_overflow)
*Debug 10/03 17:24:43.66 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decompression_failure)
*Debug 10/03 17:24:43.66 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decompression_failure)
*Debug 10/03 17:24:43.68 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (handshake_failure)
*Debug 10/03 17:24:43.68 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (handshake_failure)
*Debug 10/03 17:24:43.68 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (no_certificate)
*Debug 10/03 17:24:43.68 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (no_certificate)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (bad_certificate)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (bad_certificate)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unsupported_certificate)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unsupported_certificate)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_revoked)
*Debug 10/03 17:24:43.69 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_revoked)
*Debug 10/03 17:24:43.71 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_expired)
*Debug 10/03 17:24:43.71 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_expired)
*Debug 10/03 17:24:43.71 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (certificate_unknown)
*Debug 10/03 17:24:43.71 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (certificate_unknown)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (illegal_parameter)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (illegal_parameter)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unknown_ca)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (unknown_ca)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (access_denied)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (access_denied)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decode_error)
*Debug 10/03 17:24:43.72 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decode_error)
*Debug 10/03 17:24:43.73 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (decrypt_error)
*Debug 10/03 17:24:43.73 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (decrypt_error)
*Debug 10/03 17:24:43.73 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (export_restriction)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (export_restriction)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (protocol_version)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (protocol_version)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (insufficient_security)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (insufficient_security)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (internal_error)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (internal_error)
*Debug 10/03 17:24:43.75 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (user_canceled)
*Debug 10/03 17:24:43.76 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (user_canceled)
*Debug 10/03 17:24:43.76 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (no_renegotiation)
*Debug 10/03 17:24:43.76 Stat Controller: Api.addStat: Adding Stat SSL Alerts Sent (no_renegotiation)
*Debug 10/03 17:24:43.76 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (undefined error)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (undefined error)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (no cipher)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (no cipher)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (no certificate)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (no certificate)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (bad certificate)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (bad certificate)
*Debug 10/03 17:24:43.78 Stat Controller: Api.addStat: Adding Stat SSL Errors Received (unsupported certificate)
*Debug 10/03 17:24:43.79 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent (unsupported certificate)
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat SSL Errors Received
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat SSL Errors Sent
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat Client Hello Sent
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat Client Hello Received
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat Server Hello Sent
*Debug 10/03 17:24:43.85 Stat Controller: Api.addStat: Adding Stat Server Hello Received
*Debug 10/03 17:24:43.86 Stat Controller: Api.addStat: Adding Stat Hello Requests Sent
*Debug 10/03 17:24:43.86 Stat Controller: Api.addStat: Adding Stat Hello Requests Received
*Debug 10/03 17:24:43.86 Stat Controller: Api.addStat: Adding Stat SSL Session Reuse Success
*Debug 10/03 17:24:43.86 Stat Controller: Api.addStat: Adding Stat SSL Session Reuse Failed
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Concurrent Sessions
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Bytes Sent
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Bytes Received
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Throughput Bytes
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Application Data Bytes
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Certificate Validation Failure
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Certificate Self Signed
*Debug 10/03 17:24:43.88 Stat Controller: Api.addStat: Adding Stat SSL Certificate CA Signed
*Debug 10/03 17:24:43.89 Stat Controller: Api.addStat: Adding Stat SSL Alerts Received (unrecognized name)
*Debug 10/03 17:24:43.89 Stat Controller: Api.addStat: Adding Stat SSL SNI extension sent successfully
*Debug 10/03 17:24:43.89 Stat Controller: Api.addStat: Adding Stat SSL SNI extension mismatch
*Debug 10/03 17:24:43.91 Stat Controller: Api.addStat: Adding Stat SSL session ticket reuse success
*Debug 10/03 17:24:43.91 Stat Controller: Api.addStat: Adding Stat SSL session ticket reuse failure
*Debug 10/03 17:24:43.91 Stat Controller: Api.addStat: Adding Stat SSL Negotiation Finished Successfully
*Debug 10/03 17:24:43.91 Stat Controller: Api.addStat: Adding Stat TCP SYN Sent
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP SYN_SYN-ACK Received
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP SYN Failed
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP SYN-ACK Sent
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP Connection Requests Failed
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP Connections Established
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP FIN Sent
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP FIN Received
*Debug 10/03 17:24:43.92 Stat Controller: Api.addStat: Adding Stat TCP FIN-ACK Sent
*Debug 10/03 17:24:43.94 Stat Controller: Api.addStat: Adding Stat TCP FIN-ACK Received
*Debug 10/03 17:24:43.94 Stat Controller: Api.addStat: Adding Stat TCP Resets Sent
*Debug 10/03 17:24:43.94 Stat Controller: Api.addStat: Adding Stat TCP Resets Received
*Debug 10/03 17:24:43.94 Stat Controller: Api.addStat: Adding Stat TCP Retries
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Timeouts
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Accept Queue Entries
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Listen Queue Drops
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Connections in ESTABLISHED State
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Connections in SYN-SENT State
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Connections in SYN-RECEIVED State
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Connections in FIN-WAIT-1 State
*Debug 10/03 17:24:43.95 Stat Controller: Api.addStat: Adding Stat TCP Connections in FIN-WAIT-2 State
*Debug 10/03 17:24:43.96 Stat Controller: Api.addStat: Adding Stat TCP Connections in TIME-WAIT State
*Debug 10/03 17:24:43.96 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSE STATE
*Debug 10/03 17:24:43.96 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSE-WAIT State
*Debug 10/03 17:24:43.98 Stat Controller: Api.addStat: Adding Stat TCP Connections in LAST-ACK State
*Debug 10/03 17:24:43.98 Stat Controller: Api.addStat: Adding Stat TCP Connections in LISTENING State
*Debug 10/03 17:24:43.98 Stat Controller: Api.addStat: Adding Stat TCP Connections in CLOSING State
*Debug 10/03 17:24:43.98 Stat Controller: Api.addStat: Adding Stat TCP Internally Aborted Connections
*Debug 10/03 17:24:43.157 Test Controller : WARNING: The repository object is EMPTY.
*Debug 10/03 17:24:43.170 Test Controller : WARNING: The repository object is EMPTY.
*Debug 10/03 17:24:43.178 Test Controller : Uploading tcl code to tcl interpreter for test event callbacks
*Debug 10/03 17:24:43.180 POP3_Client.Pop3Command: Command list upgraded!
*Console 10/03 17:24:43.181 : SYNC: Network1 @ Tue Oct 03 17:24:43 2017 - duration - 0.0019998550415
*Debug 10/03 17:24:43.184 Test Controller : @@@run: doing start run...
*Debug 10/03 17:24:43.188 Test Controller : ##### ChassisChain synced: True
*Debug 10/03 17:24:43.188 Test Controller: testName = Test1 ; stateName =  TestController: UNCONFIGURED                    ; eventId =  TestController: Start the Run ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:43.190 Test Controller : @@@run:  using ::ixTestControllerMonitor as monitor variable
*Debug 10/03 17:24:43.257 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:43.257 Test Controller: event ID received =  TestController: Start the Run
*Debug 10/03 17:24:43.257 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Start the Run
*Warning 10/03 17:24:43.260 Advanced Timeline : The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Debug 10/03 17:24:43.315 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Start the Run
*Debug 10/03 17:24:43.315 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: UNCONFIGURED                    
*Debug 10/03 17:24:43.315 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:43.315 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:43.315 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:24:43.315 Test Controller:  PUBLISHING STATE : [ TestController: CONFIG INIT                     ]
*Debug 10/03 17:24:43.315 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:43.315 Test Controller : ixRunStateHandler received event  TestController: CONFIG INIT                     
*Debug 10/03 17:24:43.332 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIG INIT
*Debug 10/03 17:24:43.335 IxAnalyzer : Analyzer - set test state - 1
*Debug 10/03 17:24:43.335 Test Controller : set resultFolderCreatedAtApplyConfig to False
*Debug 10/03 17:24:43.335 Test Controller : SM Cancel being invoked
*Debug 10/03 17:24:43.344 Test Controller : SM Cancel completed
*Debug 10/03 17:24:43.348 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Check Config ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:43.365 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: UNCONFIGURED', EVENT RECEIVED:  TestController: Start the Run
  NEW STATE: 'TestController: CONFIG INIT', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:43.367 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:43.367 Test Controller: event ID received =  TestController: Check Config
*Debug 10/03 17:24:43.367 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Check Config
*Debug 10/03 17:24:43.368 Test Server: IP Overlapping Disabled
*Debug 10/03 17:24:43.378 Test: dest [10.72.24.101] not in destinations[[]]
*Debug 10/03 17:24:43.378 Test: DESTINATION IP ADDRESS IDENTIFIED - dest = 10.72.24.101 port = 80
*Debug 10/03 17:24:43.378 Test: dest [10.72.24.101] not in destinations[[]]
*Debug 10/03 17:24:43.378 Test: DESTINATION IP ADDRESS IDENTIFIED - dest = 10.72.24.101 port = 80
*Debug 10/03 17:24:43.380 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:43.380 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:43.391 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 global featureDict = {0: 1, 1: 0, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 25: 0, 26: -1, 27: 0}
*Debug 10/03 17:24:43.391 Traffic Traffic1: Traffic Traffic1 before reviseNetTrafficFeatures aggregatedFeatures = {0: 1, 1: 0, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 13: 0, 14: 0, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 0, 25: 0, 26: -1, 27: 0}
*Debug 10/03 17:24:43.395 Network Network1: ************ Not Multicore; Returning False; **************
*Debug 10/03 17:24:43.395 NetTraffic Traffic1@Network1: ************ Conditional View Enable; Returning False; **************
*Debug 10/03 17:24:43.395 NetTraffic Traffic1@Network1: isConditionalViewSupported result=True self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=True
*Debug 10/03 17:24:43.397 NetTraffic Traffic1@Network1: fastTcpStack
*Debug 10/03 17:24:43.397 Traffic Traffic1: Traffic Traffic1 after reviseNetTrafficFeatures aggregatedFeatures = {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 0, 11: 0, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 0, 25: 0, 26: -1, 27: 0}
*Debug 10/03 17:24:43.398 Network Network1: Port(s) [(1,1,5)] in network Network1 do not support L7 mode)
*Debug 10/03 17:24:43.440 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 10/03 17:24:43.441 Traffic Traffic1: Available memory from card 2060409956.
*Debug 10/03 17:24:43.441 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:43.441 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:43.443 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:43.443 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:43.443 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 10/03 17:24:43.444 Network Network1: Setting activity id for community Traffic1@Network1
*Debug 10/03 17:24:43.444 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Adding flow HTTPClient1 with RuntimeId 0 to activityIdList
*Debug 10/03 17:24:43.444 Traffic Traffic1: agent HTTP requires advancedFeatures: []
*Debug 10/03 17:24:43.450 NetTraffic Traffic1@Network1: Max allowed activities is 16
*Warning 10/03 17:24:43.453 NetTraffic Traffic1@Network1: The number of Simulated Users configured (20000) is greater than the total IPv4 Pool Size (1) for activity 'HTTPClient1' in Client Traffic-Network Mapping 'Traffic1@Network1'. Some users will use the same addresses as others.
*Debug 10/03 17:24:43.454 Traffic Traffic1: Available memory from card 2060409956.
*Debug 10/03 17:24:43.454 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:43.456 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:43.456 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:43.456 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:43.456 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 10/03 17:24:43.457 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                     TCP Ports requirement:
                                     UsersPerIP: 0 UsersPerPort: 0 TcpPortsPerUser: 3 Ports required = 0.000000
*Debug 10/03 17:24:43.457 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                   UDP Ports requirement:
                                   UsersPerIP: 0 UsersPerPort: 0 UdpPortsPerUser: 0 Ports required = 0.000000
*Debug 10/03 17:24:43.459 *PCU*: Traffic1@Network1: HTTPClient1: Ports required for memory 0.0554025218091, tcp/udp dominance 0
*Debug 10/03 17:24:43.473 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 10/03 17:24:43.477 *PCU*: Traffic1@Network1: HTTPClient1: Objective Performance is 0.0 for objective simulatedUsers cardFamily acceleron-np configId IxStack:
*Debug 10/03 17:24:43.479 *PCU*: Traffic1@Network1: HTTPClient1: Ports requirement for agent specified max is 0, objectiveValue 20000, maxObjectiveFromObjectivePerformance 0.0, usingMaxAllowedObjective 0,
*Warning 10/03 17:24:43.480 Advanced Timeline : The last segment of timeline Timeline1 does not start and end at 0 - some users might be pending when test stops
*Debug 10/03 17:24:43.483 Test: buildDefaultStatViewList() CSV logging is Enabled.
*Debug 10/03 17:24:43.483 Test: @ Building default StatView list...
*Debug 10/03 17:24:43.483 Test: @ Building activity HTTPClient1 StatView list...
*Debug 10/03 17:24:43.494 Test: @ Building Protocol CSV Views...
*Debug 10/03 17:24:43.494 Test: buildDefaultPerProtocolStats()
*Debug 10/03 17:24:43.494 Test: Building CSV view for protocol = HTTP, role = Client...
*Debug 10/03 17:24:43.499 Test: Using longest activity HTTPClient1 for creating view for protocol = HTTP, role = Client 
*Debug 10/03 17:24:43.499 Test: @ Building Test CSV Views...
*Debug 10/03 17:24:43.499 Test: buildDefaultTestStats()
*Debug 10/03 17:24:43.500 Test: @ Building CSV view for test Client...
*Debug 10/03 17:24:43.502 Test: using longest activity HTTPClient1 for creating view for type = Client 
*Debug 10/03 17:24:43.502 Test: @ Building Run State Views...
*Debug 10/03 17:24:43.572 Network: Unregistered PortGroup or non-PG object changed!
*Debug 10/03 17:24:43.575 Test: asmXmvAllPortDict={0: [(1,1,5)]}
*Debug 10/03 17:24:43.575 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: RebootPorts ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:43.575 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Check Config
*Debug 10/03 17:24:43.575 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:43.576 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:43.576 Test Controller: event ID received =  TestController: RebootPorts
*Debug 10/03 17:24:43.576 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: RebootPorts
*Debug 10/03 17:24:43.576 Test Controller : TEST CONTROLLER: setupCommunityControllers()
*Debug 10/03 17:24:43.578 Test Controller : Creating NEW COMMUNITY CONTROLLER : Traffic1@Network1
*Console 10/03 17:24:43.578 : ixPortController for card (1,1) reports isMultiNic = False
*Debug 10/03 17:24:43.612 ixFSM: 
  *** FSM Community Controller Traffic1@Network1 ENTERING STATE  Community Controller: INIT CONFIG           
*Debug 10/03 17:24:43.612 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: INIT CONFIG  :: Traffic1@Network1 
*Debug 10/03 17:24:43.612 Community Controller: Clearing cache on Traffic1@Network1
*Debug 10/03 17:24:43.612 Community Controller: Community cache cleared on Traffic1@Network1 .
*Debug 10/03 17:24:43.615 Test Controller : <Community Controller thread started> Traffic1@Network1
*Debug 10/03 17:24:43.615 Test Controller : Following communities have been successfully added to the list.
*Debug 10/03 17:24:43.615 Test Controller : Community Controller = Traffic1@Network1
*Debug 10/03 17:24:43.615 Test Controller: setUserStopRunFlag is False
*Debug 10/03 17:24:43.615 Test Controller : The port list for the active test.
*Debug 10/03 17:24:43.615 Community Controller: Initialize the Port List for the community : Traffic1@Network1
*Debug 10/03 17:24:43.615 Community Controller: Ports : [(1,1,5)]
*Debug 10/03 17:24:43.642 Test Controller: Total number of Ports for this test are: 1
*Debug 10/03 17:24:43.644 Event Scheduler: addEvent() Function. interval = 0, action = <bound method ixTestControllerFSMThread._configuringTimerExpired of <ixTestControllerFSMThread(Test Controller, started daemon 6604)>>, actionArguments=(()), iteration=0, startDelay=2400 and Timer Index = 1
*Debug 10/03 17:24:43.644 Event Scheduler: EVENT ADDED to the events map. Timer Index=1
*Debug 10/03 17:24:43.644 Test Controller: [ Configuring Watch Dog Timer created. ] Timer ID = 1 
*Debug 10/03 17:24:43.644 Test Controller: [ Configured timeout interval = 0 s, start delay = 2400 s. ]
*Debug 10/03 17:24:43.644 Test Controller: Total number of communities for this test: 1
*Debug 10/03 17:24:43.645 Network: ##### Removing port from portList (1,1,5)
*Debug 10/03 17:24:43.645 Chassis Chain: Taking ownership on [[1, 1, 5]].
*Info 10/03 17:24:43.778 Chassis Chain: Successfully took ownership on the ports [[1, 1, 5]]
*Info 10/03 17:24:43.976 Test Controller: Tearing down all network interfaces started...
*Info 10/03 17:24:44.2 Test Controller: Tearing down all interfaces completed...
*Debug 10/03 17:24:44.3 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Switching to L7 Mode ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.5 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: RebootPorts
*Debug 10/03 17:24:44.5 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.5 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.5 Test Controller: event ID received =  TestController: Switching to L7 Mode
*Debug 10/03 17:24:44.5 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Switching to L7 Mode
*Debug 10/03 17:24:44.5 Test Controller : switchPortOperationMode() start
*Debug 10/03 17:24:44.6 Test Controller : _getSwitchingOperationModePortMap on ports [(1,1,5)]
*Debug 10/03 17:24:44.6 Chassis Chain: Getting operation mode on [(1,1,5)]
*Debug 10/03 17:24:44.17 Chassis Chain: getSwitchingOperationModePortMap for multiModePortList [(1,1,5)] - {}
*Debug 10/03 17:24:44.17 Test Controller : switchPortOperationMode() end
*Debug 10/03 17:24:44.17 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Finish PortConfig ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.19 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Switching to L7 Mode
*Debug 10/03 17:24:44.19 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.19 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.19 Test Controller: event ID received =  TestController: Finish PortConfig
*Debug 10/03 17:24:44.19 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Finish PortConfig
*Debug 10/03 17:24:44.19 Test Controller: _TransAction_ApplyAggregationMode
*Debug 10/03 17:24:44.19 Test: resetAggregationMode()
*Debug 10/03 17:24:44.19 Test: resetAsmXmvCardAggregationMode()
*Debug 10/03 17:24:44.19 Test: asmXmvAllPortDict={0: [(1,1,5)]}
*Debug 10/03 17:24:44.19 Chassis Chain: Getting aggregation mode on cards [(1,1)]...
*Debug 10/03 17:24:44.30 Chassis Chain: Getting aggregation mode is done
*Debug 10/03 17:24:44.30 Test: applyAggregationMode()
*Debug 10/03 17:24:44.32 Test: applyPartitionAggregationMode()
*Debug 10/03 17:24:44.32 Chassis Chain: Deleting partition on [(1,1,5)] ...
*Debug 10/03 17:24:44.40 Chassis Chain: Deleting partition on [(1,1,5)] is done
*Debug 10/03 17:24:44.42 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Reboot Ports Done ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.42 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Finish PortConfig
*Debug 10/03 17:24:44.42 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.42 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.42 Test Controller: event ID received =  TestController: Reboot Ports Done
*Debug 10/03 17:24:44.42 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Reboot Ports Done
*Debug 10/03 17:24:44.45 Test Controller : Reset the ports - [(1,1,5)]
*Debug 10/03 17:24:44.45 Chassis Chain: ************** REGISTER CALLBACK ***********************
*Debug 10/03 17:24:44.45 Chassis Chain: **CALLBACK = Ixia.RpFramework.Client.ArgumentsCallback
*Debug 10/03 17:24:44.46 Chassis Chain: ************** REGISTER CALLBACK ***********************
*Debug 10/03 17:24:44.46 Chassis Chain: **CALLBACK = Ixia.RpFramework.Client.ArgumentsCallback
*Debug 10/03 17:24:44.46 Chassis Chain - AptIxia Callbacks: Reset factory default response = System.Object[]
*Debug 10/03 17:24:44.46 Test Controller : switchPortOperationMode() start
*Debug 10/03 17:24:44.46 Chassis Chain - AptIxia Callbacks: error_exception = None
*Debug 10/03 17:24:44.49 Test Controller : _getSwitchingOperationModePortMap on ports [(1,1,5)]
*Debug 10/03 17:24:44.49 Test Controller : testServerCallback_ResetPortsResponse failedPorts = [] for setting factory defaults
*Debug 10/03 17:24:44.49 Chassis Chain: Getting operation mode on [(1,1,5)]
*Debug 10/03 17:24:44.49 Test Controller : Sending kEventTestController_AptixiaResetFactoryPortsSuccess for setting factory defaults
*Debug 10/03 17:24:44.49 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: The callback received for the reset factory ports and the api was completed successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.171 Chassis Chain: getSwitchingOperationModePortMap for multiModePortList [(1,1,5)] - {}
*Debug 10/03 17:24:44.173 Chassis Chain - AptIxia Callbacks: Reset mode default response = System.Object[]
*Debug 10/03 17:24:44.173 Test Controller : switchPortOperationMode() end
*Debug 10/03 17:24:44.173 Chassis Chain - AptIxia Callbacks: error_exception = None
*Debug 10/03 17:24:44.174 Test Controller : switchPortLineSpeed() start
*Info 10/03 17:24:44.176 Chassis Chain - AptIxia Callbacks: Reset mode defaults completed successfully on the ports [(1,1,5)]
*Debug 10/03 17:24:44.176 Test Controller : switchPortLineSpeed() end
*Debug 10/03 17:24:44.177 Test Controller : testServerCallback_ResetPortsResponse failedPorts = [] for setting mode defaults
*Debug 10/03 17:24:44.178 Test Controller : Sending kEventTestController_AptixiaResetModePortsSuccess for setting mode defaults
*Debug 10/03 17:24:44.180 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: The callback received for the reset mode ports and the api was completed successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.210 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) subrange 192.168.31.42;1;5: count=1 endpointId=200000 endpointIdIncrement=1 endpointType=IPv4
*Debug 10/03 17:24:44.210 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetRangeDistribution took 0.0309998989105, it returned 1 ranges with total endpoint count 1
*Debug 10/03 17:24:44.211 NetTraffic Traffic1@Network1: Ramp up value for activity 'HTTPClient1' on port (1,1,5) is 1
*Debug 10/03 17:24:44.211 NetTraffic Traffic1@Network1: Ramp down value for activity 'HTTPClient1' on port (1,1,5) is 0
*Info 10/03 17:24:44.216 Test: Verifying license availability for test Test1...
*Debug 10/03 17:24:44.217 Licensing: Checking out license for test Test1...
*Debug 10/03 17:24:44.224 Traffic Traffic1: agent HTTP requires advancedFeatures: []
*Debug 10/03 17:24:44.224 Traffic Traffic1: agent HTTP requires subscriptionFeatures: []
*Debug 10/03 17:24:44.226 NetTraffic Traffic1@Network1: community Traffic1@Network1 has features: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x248C3590>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x248C33D0>}; featureLicenseCountMap: {}
*Debug 10/03 17:24:44.226 Test: Chassis 192.168.31.42 - test Test1 has features requiring license check: {'IXLOAD': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x248C3590>, 'HTTP-Basic': <Lib.Common.ixFeatureContext.ixFeatureContext object at 0x248C33D0>}
*Debug 10/03 17:24:44.226 Licensing: There are no counted licenses per port for test Test1!
*Info 10/03 17:24:44.229 Licensing: Checking out license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42'] ...
*Info 10/03 17:24:44.358 Licensing: License check out succeeded for test Test1
*Info 10/03 17:24:44.361 Licensing: Checking in license for test Test1...
*Info 10/03 17:24:44.362 Licensing: Checking in license for feature(s) IXLOAD,HTTP-Basic for chassis 192.168.31.42 on license server ['@192.168.31.42']...
*Debug 10/03 17:24:44.362 Licensing: Release license batch _40edb220_p_MULTI_IXLM_HANDLE size = 1 debug=0
*Info 10/03 17:24:44.364 Licensing: License check in succeeded for test Test1.

*Info 10/03 17:24:44.364 Test: License availability verification succeeded for test Test1.
*Debug 10/03 17:24:44.365 Network Network1: Network 'Network1': needAutoloadPackage False
*Debug 10/03 17:24:44.466 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Reboot Ports Done
*Debug 10/03 17:24:44.466 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.466 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.467 Test Controller: event ID received =  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 10/03 17:24:44.467 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 10/03 17:24:44.467 Test Controller: Test Controller FSM: Internal Transition Action: resetFactoryPortsCompleted()
*Debug 10/03 17:24:44.467 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.467 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: The callback received for the reset factory ports and the api was completed successfully
*Debug 10/03 17:24:44.467 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.469 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.469 Test Controller: event ID received =  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 10/03 17:24:44.469 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 10/03 17:24:44.469 Test Controller: Test Controller FSM: Internal Transition Action: resetModePortsCompleted()
*Debug 10/03 17:24:44.469 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:44.470 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: The callback received for the reset mode ports and the api was completed successfully
*Debug 10/03 17:24:44.470 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.470 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.470 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 10/03 17:24:44.470 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:44.470 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 0, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 10/03 17:24:44.470 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:44.470 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.471 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:44.471 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 10/03 17:24:44.471 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:44.471 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 0, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 10/03 17:24:44.471 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:44.473 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:44.556 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:44.556 Community Controller Traffic1@Network1: event ID received =  Community Controller: Connect to ports
*Debug 10/03 17:24:44.558 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Connect to ports
*Debug 10/03 17:24:44.558 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: INIT CONFIG  :: Traffic1@Network1 
*Debug 10/03 17:24:44.558 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Connect to ports
*Debug 10/03 17:24:44.558 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: INIT CONFIG          
*Debug 10/03 17:24:44.559 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONNECT TO PORTS     
*Debug 10/03 17:24:44.559 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONNECT TO PORTS :: Traffic1@Network1 
*Debug 10/03 17:24:44.559 Community Controller: Set the Ports with the Port Controller
*Debug 10/03 17:24:44.559 Community Controller: Ports : [(1,1,5)]
*Debug 10/03 17:24:44.559 Community Controller: Connecting to all ports..
*Debug 10/03 17:24:44.561 Socket: Connecting to (u'10.0.1.5', 1911) through ('192.168.31.42', 1080)
*Debug 10/03 17:24:44.562 [Traffic1@Network1] Port Controller: @@@ Starting PumpData thread @@@

*Debug 10/03 17:24:44.562 [Traffic1@Network1] Port Controller: Connecting to 1 hosts...
*Debug 10/03 17:24:44.614 Socket: Connected to (1,1,5)!
*Debug 10/03 17:24:44.663 [Traffic1@Network1] Port Controller: Setting connection id dcfca068-3bce-4609-ad75-250e6d77ca73
*Debug 10/03 17:24:46.496 [Traffic1@Network1] Port Controller: (1,1,5) connect dirty = no
*Debug 10/03 17:24:46.763 [Traffic1@Network1] Port Controller: (1,1,5): setConnectionId: None
*Debug 10/03 17:24:46.862 [Traffic1@Network1] Port Controller: (1,1,5): setSystemTime: This port does not need time syncing
*Debug 10/03 17:24:46.862 Community Controller: Successfully Connected to all ports in 2.3029999733 seconds
*Debug 10/03 17:24:46.963 [Traffic1@Network1] Port Controller: (1,1,5): getLinuxDistribution: 0
*Debug 10/03 17:24:46.963 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  Community Controller: Community connected to ports successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:46.964 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: INIT CONFIG', EVENT RECEIVED:  Community Controller: Connect to ports
  NEW STATE: 'Community Controller: CONNECT TO PORTS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:46.964 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:46.966 Community Controller Traffic1@Network1: event ID received =  Community Controller: Prepare configuration
*Debug 10/03 17:24:46.966 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Prepare configuration
*Debug 10/03 17:24:46.966 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONNECT TO PORTS  :: Traffic1@Network1 
*Debug 10/03 17:24:46.966 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Prepare configuration
*Debug 10/03 17:24:46.967 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONNECT TO PORTS     
*Debug 10/03 17:24:46.967 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: PREPARING CONFIGURATION 
*Debug 10/03 17:24:46.967 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: PREPARING CONFIGURATION :: Traffic1@Network1 
*Debug 10/03 17:24:46.967 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONNECT TO PORTS', EVENT RECEIVED:  Community Controller: Prepare configuration
  NEW STATE: 'Community Controller: PREPARING CONFIGURATION', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:46.973 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:46.973 Test Controller: event ID received =  Community Controller: Community connected to ports successfully
*Debug 10/03 17:24:46.973 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community connected to ports successfully
*Debug 10/03 17:24:46.973 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:46.973 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community connected to ports successfully
*Debug 10/03 17:24:46.973 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:46.973 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:46.974 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 10/03 17:24:46.974 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:46.974 Test Controller: _TransAction_checkConfigInitComplete: _totalComm=1; self._count = 1, _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 10/03 17:24:46.974 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: All Communities Cleaned and Initialized Successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:46.976 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:46.976 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:46.976 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:46.976 Test Controller: event ID received =  TestController: All Communities Cleaned and Initialized Successfully
*Debug 10/03 17:24:46.976 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Cleaned and Initialized Successfully
*Debug 10/03 17:24:46.977 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG INIT                     ; eventId =  TestController: Entering Configure NetTraffic State ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:46.977 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Cleaned and Initialized Successfully
*Debug 10/03 17:24:46.977 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:46.979 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:46.979 Test Controller: event ID received =  TestController: Entering Configure NetTraffic State
*Debug 10/03 17:24:46.979 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Entering Configure NetTraffic State
*Debug 10/03 17:24:47.9 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIG INIT
*Debug 10/03 17:24:47.35 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Entering Configure NetTraffic State
*Debug 10/03 17:24:47.36 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIG INIT                     
*Debug 10/03 17:24:47.36 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 10/03 17:24:47.36 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:47.36 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:24:47.36 Test Controller:  PUBLISHING STATE : [ TestController: CONFIG NETWORK & TRAFFIC        ]
*Debug 10/03 17:24:47.36 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:47.36 Test Controller : ixRunStateHandler received event  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 10/03 17:24:47.52 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 10/03 17:24:47.52 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 10/03 17:24:47.53 Test Controller: (Re)configuring network because _networkConfigured is False.
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Starting rule resolution
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Now matching for (['Kone', 'Kone Compatible', 'TCP CC', 'KSE SSL HTTP'])
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Checking rule 0.
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Checking rule 1.
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns False for KSE New SSL
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Checking rule 2.
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Checking rule 3.
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns True for KeepAnyOf(TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.55 ixDodRuleEngine: match returns True for NoneOf(UDP PSTREAM)
*Debug 10/03 17:24:47.55 ixDodRuleEngine: Rule 3 fired.
*Debug 10/03 17:24:47.55 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/ixStackAdapter.tar']
*Debug 10/03 17:24:47.56 Stat Controller: svApplyConfig()
*Debug 10/03 17:24:47.56 ixDodRuleEngine: Now matching for ['Kone', 'Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.58 ixDodRuleEngine: Checking rule 4.
*Debug 10/03 17:24:47.58 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.58 ixDodRuleEngine: match returns False for NoneOf(UDP PSTREAM,TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.58 ixDodRuleEngine: Checking rule 5.
*Debug 10/03 17:24:47.58 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.58 ixDodRuleEngine: match returns False for KeepAnyOf(UDP PSTREAM)
*Debug 10/03 17:24:47.58 ixDodRuleEngine: Checking rule 6.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for TCP Packet Switch
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 7.
*Debug 10/03 17:24:47.59 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 8.
*Debug 10/03 17:24:47.59 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 9.
*Debug 10/03 17:24:47.59 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 10.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for KeepAnyOf(kInfoProviderIxDataPubFeature)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 11.
*Debug 10/03 17:24:47.59 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 12.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 13.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns True for NoneOf(Replay)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns True for AnyOf(Kone Compatible)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 14.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 15.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns True for KeepAnyOf(KSE SSL CAVIUM,KSE SSL,KSE SSL HTTP)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 16.
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns True for KeepAnyOf(KSE SSL CAVIUM,KSE SSL,KSE SSL HTTP)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.59 ixDodRuleEngine: Checking rule 17.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.61 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 18.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: match returns False for NoneOf(TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 19.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 20.
*Debug 10/03 17:24:47.61 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 21.
*Debug 10/03 17:24:47.61 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 22.
*Debug 10/03 17:24:47.61 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.61 ixDodRuleEngine: Checking rule 23.
*Debug 10/03 17:24:47.61 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 24.
*Debug 10/03 17:24:47.62 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 25.
*Debug 10/03 17:24:47.62 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 26.
*Debug 10/03 17:24:47.62 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 27.
*Debug 10/03 17:24:47.62 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 28.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 29.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 30.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 31.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 32.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.62 ixDodRuleEngine: Checking rule 33.
*Debug 10/03 17:24:47.62 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 34.
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 35.
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 36.
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 37.
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 38.
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.63 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.63 ixDodRuleEngine: Checking rule 39.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for NoneOf(Conditional View)
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Rule 39 fired.
*Debug 10/03 17:24:47.65 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar', 'IxLoad_framework_kone.tar', 'Plugins/agent/Common/koneLib.tar']
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Now matching for ['Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 40.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 41.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 42.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Rule 42 fired.
*Debug 10/03 17:24:47.65 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Now matching for ['Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 43.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for High Precision
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 44.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for NoneOf(kInfoProviderIxDataPubFeature)
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 45.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Conditional View
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 46.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 47.
*Debug 10/03 17:24:47.65 ixDodRuleEngine: match returns False for Conditional View
*Debug 10/03 17:24:47.65 ixDodRuleEngine: Checking rule 48.
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns False for SSL Kernel
*Debug 10/03 17:24:47.66 ixDodRuleEngine: Checking rule 49.
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns False for kThreadedFeature
*Debug 10/03 17:24:47.66 ixDodRuleEngine: Checking rule 50.
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns False for TCP CPS
*Debug 10/03 17:24:47.66 ixDodRuleEngine: Checking rule 51.
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns False for AnyOf(UDP PSTREAM,TCP TPUT)
*Debug 10/03 17:24:47.66 ixDodRuleEngine: Checking rule 52.
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns True for AnyOf(UDP PSTREAM,TCP CC)
*Debug 10/03 17:24:47.66 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Rule 52 fired.
*Debug 10/03 17:24:47.68 ixDodRuleEngine:   Added packages ['../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar']
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Now matching for ['Kone Compatible', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Checking rule 53.
*Debug 10/03 17:24:47.68 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Checking rule 54.
*Debug 10/03 17:24:47.68 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Checking rule 55.
*Debug 10/03 17:24:47.68 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.68 ixDodRuleEngine: Rule 55 fired.
*Debug 10/03 17:24:47.69 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Now matching for ['KSE SSL HTTP']
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Checking rule 56.
*Debug 10/03 17:24:47.69 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Checking rule 57.
*Debug 10/03 17:24:47.69 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Checking rule 58.
*Debug 10/03 17:24:47.69 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Checking rule 59.
*Debug 10/03 17:24:47.69 ixDodRuleEngine: match returns False for KSE SSL
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Checking rule 60.
*Debug 10/03 17:24:47.69 ixDodRuleEngine: match returns True for KSE SSL HTTP
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Rule 60 fired.
*Debug 10/03 17:24:47.69 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/libksessl_http.tar']
*Debug 10/03 17:24:47.69 ixDodRuleEngine: No more features to match.
*Debug 10/03 17:24:47.69 ixDodRuleEngine:  Done resolving rules. Features resolve to (initial) DOD packages ['kKseSslHttp']
*Debug 10/03 17:24:47.69 ixDodRuleEngine: Features resolve to DOD package groups: {'kGroupSsl': ['kKseSslHttp'], 'kGroupFramework': ['kFrameworkKone'], 'kGroupStackAdapter': ['kStackAdapter'], 'kGroupStackAdapterType': ['kIxStackAdapter'], 'kGroupKone': ['kKone'], 'kGroupClockwork': ['kClockwork'], 'kGroupFastTcpStack': ['kFastTcpStackCc']} 
*Debug 10/03 17:24:47.69 Traffic Traffic1: getMatchingGlobalPackagesFromRule: returns packageNameList = ['IxLoad_framework_kone.tar', '../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar', 'Plugins/agent/Common/stackAdapter.tar', 'Plugins/agent/Common/ixStackAdapter.tar', 'Plugins/agent/Common/koneLib.tar', 'Plugins/agent/Common/libksessl_http.tar']
*Console 10/03 17:24:47.71 : ++++ [New SSl 0 :  KernSSL 0 : KseSSL 0 : KseSSLHTTP 1 ]
*Debug 10/03 17:24:47.73 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 featureList = {0: True, 1: False, 2: False, 3: True, 4: False, 5: False, 6: False, 7: False, 8: False, 9: False, 10: False}
*Debug 10/03 17:24:47.73 Traffic Traffic1: getMatchingPluginPackagesFromRule featureDict =  {0: 1, 1: 0, 2: 0, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0}
*Debug 10/03 17:24:47.73 Traffic Traffic1: getMatchingPluginPackagesFromRule ruleObj.packageNameMap =  [([0], ('', [])), ([0, 1, 2], ('_profile', [])), ([0, 1], ('_profile', [])), ([0, 1, 4], ('_profile', [])), ([0, 4], ('_pipeline', [])), ([0, 2], ('_maxCR', [])), ([0, 1, 2, 3], ('_quick', [])), ([0, 1, 3], ('_quick', [])), ([0, 2, 3], ('_quick', [])), ([0, 3], ('_quick', [])), ([0, 4, 2], ('_pipeline', [])), ([0, 1, 4, 2], ('_profile', [])), ([0, 9], ('_streaming', [])), ([0, 9, 2], ('_streaming_maxCR', [])), ([0, 6, 2], ('_ce', [])), ([0, 6, 7, 2], ('_ce_md5', [])), ([0, 6, 7, 1, 4, 2], ('_ce_profile', [])), ([0, 5], ('_granular_stats', [])), ([0, 1, 2, 5], ('_profile_granular_stats', [])), ([0, 1, 5], ('_profile_granular_stats', [])), ([0, 1, 4, 5], ('_profile_granular_stats', [])), ([0, 4, 5], ('_pipeline_granular_stats', [])), ([0, 2, 5], ('_maxCR_granular_stats', [])), ([0, 1, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 1, 3, 5], ('_quick_granular_stats', [])), ([0, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 3, 5], ('_quick_granular_stats', [])), ([0, 4, 2, 5], ('_pipeline_granular_stats', [])), ([0, 1, 4, 2, 5], ('_profile_granular_stats', [])), ([0, 9, 5], ('_streaming_granular_stats', [])), ([0, 9, 2, 5], ('_streaming_maxCR_granular_stats', [])), ([0, 6, 5, 2], ('_ce_granular_stats', [])), ([0, 6, 7, 5, 2], ('_ce_md5_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 8], ('_new_ssl', [])), ([0, 8, 5], ('_new_ssl_granular_stats', [])), ([0, 10], ('_consumer_profile', []))]
*Console 10/03 17:24:47.75 : getMatchingPluginPackagesFromRule: returns packageNameList = ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 10/03 17:24:47.75 Traffic Traffic1: getTrafficPackages returns ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 10/03 17:24:47.75 Community Controller: globalPackageList = ['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\IxLoad_framework_kone.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\clockwork.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\ixTcpStack_cc.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\stackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\ixStackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\koneLib.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\libksessl_http.tar'] , packagesList = ['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Starting rule resolution
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Now matching for (['Kone', 'Kone Compatible', 'TCP CC', 'KSE SSL HTTP'])
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 0.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 1.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for KSE New SSL
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 2.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 3.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns True for KeepAnyOf(TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns True for NoneOf(UDP PSTREAM)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Rule 3 fired.
*Debug 10/03 17:24:47.180 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/ixStackAdapter.tar']
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Now matching for ['Kone', 'Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 4.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for NoneOf(UDP PSTREAM,TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 5.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for KeepAnyOf(UDP PSTREAM)
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 6.
*Debug 10/03 17:24:47.180 ixDodRuleEngine: match returns False for TCP Packet Switch
*Debug 10/03 17:24:47.180 ixDodRuleEngine: Checking rule 7.
*Debug 10/03 17:24:47.180 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 8.
*Debug 10/03 17:24:47.181 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 9.
*Debug 10/03 17:24:47.181 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 10.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: match returns False for KeepAnyOf(kInfoProviderIxDataPubFeature)
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 11.
*Debug 10/03 17:24:47.181 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 12.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.181 ixDodRuleEngine: Checking rule 13.
*Debug 10/03 17:24:47.181 ixDodRuleEngine: match returns True for NoneOf(Replay)
*Debug 10/03 17:24:47.181 ixDodRuleEngine: match returns True for AnyOf(Kone Compatible)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: Checking rule 14.
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: Checking rule 15.
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns True for KeepAnyOf(KSE SSL CAVIUM,KSE SSL,KSE SSL HTTP)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: Checking rule 16.
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns True for KeepAnyOf(KSE SSL CAVIUM,KSE SSL,KSE SSL HTTP)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for NoneOf(Kone)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: Checking rule 17.
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.183 ixDodRuleEngine: Checking rule 18.
*Debug 10/03 17:24:47.183 ixDodRuleEngine: match returns False for NoneOf(TCP TPUT,TCP CC,TCP CPS)
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 19.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 20.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 21.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 22.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 23.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 24.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 25.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 26.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 27.
*Debug 10/03 17:24:47.184 ixDodRuleEngine:   match returns False because more features required than in search list.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 28.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 29.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 30.
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.184 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.184 ixDodRuleEngine: Checking rule 31.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for KeepAnyOf(SSL Kernel)
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 32.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 33.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns True for KeepAnyOf(Kone)
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 34.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 35.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 36.
*Debug 10/03 17:24:47.186 ixDodRuleEngine: match returns False for KeepAnyOf(Conditional View)
*Debug 10/03 17:24:47.186 ixDodRuleEngine: Checking rule 37.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for NoneOf(Kone Compatible)
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 38.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 39.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for NoneOf(Conditional View)
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for Kone
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Rule 39 fired.
*Debug 10/03 17:24:47.187 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar', 'IxLoad_framework_kone.tar', 'Plugins/agent/Common/koneLib.tar']
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Now matching for ['Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 40.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 41.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 42.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for KeepAnyOf(Kone Compatible)
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Rule 42 fired.
*Debug 10/03 17:24:47.187 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Now matching for ['Kone Compatible', 'TCP CC', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 43.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for High Precision
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 44.
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns True for NoneOf(kInfoProviderIxDataPubFeature)
*Debug 10/03 17:24:47.187 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.187 ixDodRuleEngine: Checking rule 45.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for Conditional View
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 46.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 47.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for Conditional View
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 48.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for SSL Kernel
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 49.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for kThreadedFeature
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 50.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for TCP CPS
*Debug 10/03 17:24:47.188 ixDodRuleEngine: Checking rule 51.
*Debug 10/03 17:24:47.188 ixDodRuleEngine: match returns False for AnyOf(UDP PSTREAM,TCP TPUT)
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 52.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns True for AnyOf(UDP PSTREAM,TCP CC)
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns True for NoneOf(kClockworkFeature)
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Rule 52 fired.
*Debug 10/03 17:24:47.190 ixDodRuleEngine:   Added packages ['../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar']
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Now matching for ['Kone Compatible', 'KSE SSL HTTP']
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 53.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for Replay w/Advanced Stats
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 54.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 55.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns True for Kone Compatible
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Rule 55 fired.
*Debug 10/03 17:24:47.190 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/stackAdapter.tar']
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Now matching for ['KSE SSL HTTP']
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 56.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for Kone
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 57.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for Replay
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 58.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for Port Event Viewer
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 59.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns False for KSE SSL
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Checking rule 60.
*Debug 10/03 17:24:47.190 ixDodRuleEngine: match returns True for KSE SSL HTTP
*Debug 10/03 17:24:47.190 ixDodRuleEngine: Rule 60 fired.
*Debug 10/03 17:24:47.190 ixDodRuleEngine:   Added packages ['Plugins/agent/Common/libksessl_http.tar']
*Debug 10/03 17:24:47.190 ixDodRuleEngine: No more features to match.
*Debug 10/03 17:24:47.190 ixDodRuleEngine:  Done resolving rules. Features resolve to (initial) DOD packages ['kKseSslHttp']
*Debug 10/03 17:24:47.191 ixDodRuleEngine: Features resolve to DOD package groups: {'kGroupSsl': ['kKseSslHttp'], 'kGroupFramework': ['kFrameworkKone'], 'kGroupStackAdapter': ['kStackAdapter'], 'kGroupStackAdapterType': ['kIxStackAdapter'], 'kGroupKone': ['kKone'], 'kGroupClockwork': ['kClockwork'], 'kGroupFastTcpStack': ['kFastTcpStackCc']} 
*Debug 10/03 17:24:47.191 Traffic Traffic1: getMatchingGlobalPackagesFromRule: returns packageNameList = ['IxLoad_framework_kone.tar', '../aptixia/components/common/clockwork.tar', '../aptixia/components/common/ixTcpStack_cc.tar', 'Plugins/agent/Common/stackAdapter.tar', 'Plugins/agent/Common/ixStackAdapter.tar', 'Plugins/agent/Common/koneLib.tar', 'Plugins/agent/Common/libksessl_http.tar']
*Console 10/03 17:24:47.191 : ++++ [New SSl 0 :  KernSSL 0 : KseSSL 0 : KseSSLHTTP 1 ]
*Debug 10/03 17:24:47.194 Traffic Traffic1: Traffic Traffic1 Agent HTTPClient1 featureList = {0: True, 1: False, 2: False, 3: True, 4: False, 5: False, 6: False, 7: False, 8: False, 9: False, 10: False}
*Debug 10/03 17:24:47.194 Traffic Traffic1: getMatchingPluginPackagesFromRule featureDict =  {0: 1, 1: 0, 2: 0, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0}
*Debug 10/03 17:24:47.196 Traffic Traffic1: getMatchingPluginPackagesFromRule ruleObj.packageNameMap =  [([0], ('', [])), ([0, 1, 2], ('_profile', [])), ([0, 1], ('_profile', [])), ([0, 1, 4], ('_profile', [])), ([0, 4], ('_pipeline', [])), ([0, 2], ('_maxCR', [])), ([0, 1, 2, 3], ('_quick', [])), ([0, 1, 3], ('_quick', [])), ([0, 2, 3], ('_quick', [])), ([0, 3], ('_quick', [])), ([0, 4, 2], ('_pipeline', [])), ([0, 1, 4, 2], ('_profile', [])), ([0, 9], ('_streaming', [])), ([0, 9, 2], ('_streaming_maxCR', [])), ([0, 6, 2], ('_ce', [])), ([0, 6, 7, 2], ('_ce_md5', [])), ([0, 6, 7, 1, 4, 2], ('_ce_profile', [])), ([0, 5], ('_granular_stats', [])), ([0, 1, 2, 5], ('_profile_granular_stats', [])), ([0, 1, 5], ('_profile_granular_stats', [])), ([0, 1, 4, 5], ('_profile_granular_stats', [])), ([0, 4, 5], ('_pipeline_granular_stats', [])), ([0, 2, 5], ('_maxCR_granular_stats', [])), ([0, 1, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 1, 3, 5], ('_quick_granular_stats', [])), ([0, 2, 3, 5], ('_quick_granular_stats', [])), ([0, 3, 5], ('_quick_granular_stats', [])), ([0, 4, 2, 5], ('_pipeline_granular_stats', [])), ([0, 1, 4, 2, 5], ('_profile_granular_stats', [])), ([0, 9, 5], ('_streaming_granular_stats', [])), ([0, 9, 2, 5], ('_streaming_maxCR_granular_stats', [])), ([0, 6, 5, 2], ('_ce_granular_stats', [])), ([0, 6, 7, 5, 2], ('_ce_md5_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 6, 7, 1, 4, 5, 2], ('_ce_profile_granular_stats', [])), ([0, 8], ('_new_ssl', [])), ([0, 8, 5], ('_new_ssl_granular_stats', [])), ([0, 10], ('_consumer_profile', []))]
*Console 10/03 17:24:47.197 : getMatchingPluginPackagesFromRule: returns packageNameList = ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 10/03 17:24:47.197 Traffic Traffic1: getTrafficPackages returns ['Plugins/agent/HTTP_Client/httpClient_quick.tar']
*Debug 10/03 17:24:47.197 Community Controller: @@@@@@@@@ getTrafficPackages @@@@@@@@@@
*Debug 10/03 17:24:47.197 Community Controller: globalPackageList=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\IxLoad_framework_kone.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\clockwork.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\aptixia\\components\\common\\ixTcpStack_cc.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\stackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\ixStackAdapter.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\koneLib.tar', 'C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\Common\\libksessl_http.tar']
*Debug 10/03 17:24:47.197 Community Controller: packagesList=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 10/03 17:24:47.197 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 10/03 17:24:47.200 Community Controller: @@@@@@@@@ getProfilePackages @@@@@@@@@@
*Debug 10/03 17:24:47.200 Community Controller: profilePackages=[]
*Debug 10/03 17:24:47.200 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 10/03 17:24:47.201 Community Controller: @@@@@@@@@ getFixedProtocolPackages @@@@@@@@@@
*Debug 10/03 17:24:47.201 Community Controller: dod_pkg_list=[]
*Debug 10/03 17:24:47.201 Community Controller: communityPackages=[]
*Debug 10/03 17:24:47.201 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 10/03 17:24:47.201 Community Controller: @@@@@@@@@@@ getCommunityPackages @@@@@@@@@@@@
*Debug 10/03 17:24:47.201 Community Controller: dod_pkg_list=['C:\\Program Files (x86)\\Ixia\\IxLoad\\8.10-EA\\Client\\Plugins\\agent\\HTTP_Client\\httpClient_quick.tar']
*Debug 10/03 17:24:47.201 Community Controller: communityPackages=['httpClient_quick']
*Debug 10/03 17:24:47.201 Community Controller: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*Debug 10/03 17:24:47.209 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.209 IxAnalyzer : Analyzer - AddGroup(Traffic1@Network1 [(1, 1, 5)])...
*Debug 10/03 17:24:47.210 IxAnalyzer : Analyzer - AddGroup() returned: 65537
*Debug 10/03 17:24:47.210 IxAnalyzer : Analyzer - AddCaptureSource(groupId = 65537 displayName=Traffic1@Network1 [(1, 1, 5)])...
*Debug 10/03 17:24:47.213 IxAnalyzer : Analyzer - AddCaptureSource() retuned: 65538
*Debug 10/03 17:24:47.213 IxAnalyzer : setActivityFilter(captureSourceId=65538, activityName=Traffic1@Network1-HTTPClient1, root=Client, protocol=HTTP, pcapFilter=tcp port 80)
*Debug 10/03 17:24:47.214 IxAnalyzer : SetActivityFiltert() RETURNED 0
*Debug 10/03 17:24:47.214 IxAnalyzer : Analyzer - set slice  False;20 for captureSourceId = 65538
*Debug 10/03 17:24:47.216 IxAnalyzer : Analyzer - UpdateCaptureSource(captureSourceId= 65538, displayName=Traffic1@Network1 [Port 1.1.5], groupId = 65537)...
*Debug 10/03 17:24:47.217 IxAnalyzer : Analyzer - UpdateCaptureSource() retuned: 0
*Debug 10/03 17:24:47.217 IxAnalyzer : Analyzer - UpdateCaptureSource(captureSourceId = 65538, groupId = 65537 portIp = 10.0.1.5 chassisIp = 192.168.31.42 cardId = 1 portId = 5)...
*Debug 10/03 17:24:47.219 IxAnalyzer : Analyzer - UpdateCaptureSource() retuned: 0
*Debug 10/03 17:24:47.219 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.219 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.219 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.219 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.219 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 Test Controller: _testStartIxViewCapture()
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 Test Controller: _startIxViewCapture()
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:47.220 NetTraffic Traffic1@Network1: isCommunityCaptureEnabled() for Traffic1@Network1 returning False
*Info 10/03 17:24:47.220 Test Controller : Downloading packages 'IxLoad_framework_kone, clockwork, ixTcpStack_cc, stackAdapter, ixStackAdapter, koneLib, libksessl_http, httpClient_quick' for community 'Traffic1@Network1'
*Debug 10/03 17:24:47.220 Test Controller : SmartDownLoadPackages
*Debug 10/03 17:24:49.947 Test Controller : Completed downloading packages 'IxLoad_framework_kone, clockwork, ixTcpStack_cc, stackAdapter, ixStackAdapter, koneLib, libksessl_http, httpClient_quick'
*Debug 10/03 17:24:49.953 Network Network1: Clearing portGroup active port ...
*Debug 10/03 17:24:49.963 Stat Controller: Registering chassis 192.168.31.42
*Debug 10/03 17:24:49.966 Stat Controller: displaySMStats = False
*Info 10/03 17:24:49.967 Test Controller: Starting network Validate Configuration
*Debug 10/03 17:24:49.969 Test Controller : Clear timestamp on the ports - [(1,1,5)]
*Debug 10/03 17:24:49.969 Chassis Chain: Creating chassis chain for ports [(1,1,5)]...
*Debug 10/03 17:24:49.969 Chassis Chain: Adding chassis 192.168.31.42 to chassis chain
*Debug 10/03 17:24:50.3 Chassis Chain: Clearing timestamp on ports [(1,1,5)]
*Info 10/03 17:24:50.131 Network: Port Group (Network1) : Ownership taken
*Debug 10/03 17:24:50.171 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIG INIT', EVENT RECEIVED:  TestController: Entering Configure NetTraffic State
  NEW STATE: 'TestController: CONFIG NETWORK & TRAFFIC', DESCRIPTION: None, DETAILS: None, STATUS: None
*Info 10/03 17:24:50.640 Network: MacSessionData : Validated
*Info 10/03 17:24:50.641 Network: IxLoadSessionData : Validated
*Info 10/03 17:24:50.642 Network: Meshing (Meshing-1) : Validated
*Info 10/03 17:24:50.645 Network: IPSecSessionData : Validated
*Info 10/03 17:24:50.647 Network: IpSessionData : Validated
*Info 10/03 17:24:50.648 Network: Ethernet (Ethernet-1) : Validated
*Info 10/03 17:24:50.650 Network: TCP (TCP-2) : Validated
*Info 10/03 17:24:50.651 Network: DNS (DNS-2) : Validated
*Info 10/03 17:24:50.654 Network: Filter (Filter-1) : Validated
*Info 10/03 17:24:50.655 Network: Settings (Settings-2) : Validated
*Info 10/03 17:24:50.670 Network: MAC/VLAN (MAC/VLAN-1) : Validated
*Info 10/03 17:24:50.671 Network: GratARP (GratARP-1) : Validated
*Info 10/03 17:24:50.694 Network: IP (IP-1) : Validated
*Info 10/03 17:24:50.694 Test Controller : Received callback from SM session Validate Config
*Debug 10/03 17:24:50.694 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: StackManager session config validated ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:50.770 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:50.770 Test Controller: event ID received =  TestController: StackManager session config validated
*Debug 10/03 17:24:50.770 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager session config validated
*Info 10/03 17:24:50.770 Test Controller : Starting network configuration
*Info 10/03 17:24:50.772 Test Controller: Network validated successfully
*Info 10/03 17:24:50.773 Test Controller: Async Configure Network on Traffic1@Network1
*Debug 10/03 17:24:50.775 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager session config validated
*Debug 10/03 17:24:50.776 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Info 10/03 17:24:50.776 Network: Network Session : Configuring
*Info 10/03 17:24:50.779 Network: Network Session : Configured
*Debug 10/03 17:24:50.868 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:50.868 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the network
*Debug 10/03 17:24:50.868 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the network
*Debug 10/03 17:24:50.868 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: PREPARING CONFIGURATION  :: Traffic1@Network1 
*Debug 10/03 17:24:50.868 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the network
*Debug 10/03 17:24:50.868 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: PREPARING CONFIGURATION 
*Debug 10/03 17:24:50.868 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING NETWORK  
*Debug 10/03 17:24:50.869 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING NETWORK :: Traffic1@Network1 
*Debug 10/03 17:24:50.869 Network Network1: Spawning IxiaNeigh process on [(1,1,5)] in NetTraffic Traffic1@Network1...
*Debug 10/03 17:24:50.871 [Traffic1@Network1] Port Controller: Starting process ixia_neigh='/bin/ixia_neigh []' on the hosts: None.
*Debug 10/03 17:24:50.971 Community Controller: Applying config for network Network1 ...
*Debug 10/03 17:24:50.993 NetTraffic Traffic1@Network1: fastTcpStack
*Debug 10/03 17:24:50.993 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) subrange 192.168.31.42;1;5: count=1 endpointId=200000 endpointIdIncrement=1 endpointType=IPv4
*Debug 10/03 17:24:50.994 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetRangeDistribution took 0.0, it returned 1 ranges with total endpoint count 1
*Debug 10/03 17:24:51.15 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): IpSubrangeList compactingType = 0x0x3
*Debug 10/03 17:24:51.16 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1)@192.168.31.42;1;5 subrange 0: count=1 intId=200000 intIncr=1 ip=/0 ipIncr= gateway= peer= peerStep= mac=00:0A:35:AD:97:00 macIncr=00:00:00:00:00:01 vlan=-1
*Debug 10/03 17:24:51.16 Network Range Network Range IP-R1 in Network1 (10.53.173.151+1): Network Range IP-R1 in Network1 (10.53.173.151+1) GetIpSubrangeList took 0.0110001564026, it returned 1 ranges with total IP count 1
*Debug 10/03 17:24:51.33 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: PREPARING CONFIGURATION', EVENT RECEIVED:  Community Controller: Configure the network
  NEW STATE: 'Community Controller: CONFIGURING NETWORK', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:51.33 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:51.35 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the traffic
*Debug 10/03 17:24:51.35 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the traffic
*Debug 10/03 17:24:51.35 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING NETWORK :: Traffic1@Network1 
*Debug 10/03 17:24:51.35 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the traffic
*Debug 10/03 17:24:51.35 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING NETWORK  
*Debug 10/03 17:24:51.36 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 10/03 17:24:51.36 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING NETWORK', EVENT RECEIVED:  Community Controller: Configure the traffic
  NEW STATE: 'Community Controller: CONFIGURING TRAFFIC', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:51.36 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:51.36 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configuring Traffic
*Debug 10/03 17:24:51.36 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configuring Traffic
*Debug 10/03 17:24:51.36 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING TRAFFIC :: Traffic1@Network1 
*Info 10/03 17:24:51.38 Community Controller Traffic1@Network1: Applying traffic configuration for the community Traffic1@Network1
*Debug 10/03 17:24:51.39 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  Community Controller: Community net-traffic configured successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:51.39 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configuring Traffic
*Debug 10/03 17:24:51.40 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 10/03 17:24:51.75 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:51.75 Test Controller: event ID received =  Community Controller: Community net-traffic configured successfully
*Debug 10/03 17:24:51.75 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community net-traffic configured successfully
*Debug 10/03 17:24:51.76 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommConfigured()
*Debug 10/03 17:24:51.76 Test Controller: Communities configured so far: 1 of 1
*Debug 10/03 17:24:51.76 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: CheckStateComplete ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:51.78 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community net-traffic configured successfully
*Debug 10/03 17:24:51.78 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 10/03 17:24:51.78 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:51.78 Test Controller: event ID received =  TestController: CheckStateComplete
*Debug 10/03 17:24:51.78 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:51.78 Test Controller: __checkAllCommConfigured: _resetFactoryPortsCompleted=True, _resetModePortsCompleted=True
*Debug 10/03 17:24:51.78 Test Controller: testName = Test1 ; stateName =  TestController: CONFIG NETWORK & TRAFFIC        ; eventId =  TestController: All Communities Configured Successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:51.78 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: CheckStateComplete
*Debug 10/03 17:24:51.79 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 10/03 17:24:51.79 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:51.79 Test Controller: event ID received =  TestController: All Communities Configured Successfully
*Debug 10/03 17:24:51.79 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Configured Successfully
*Debug 10/03 17:24:51.111 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIGURE NETWORK & TRAFFIC
*Debug 10/03 17:24:51.111 Test Controller : Updating information for ports - [(1,1,5)]
*Info 10/03 17:24:51.496 Network: Ethernet (Ethernet-1) : Configured
*Debug 10/03 17:24:51.605 Test Controller: joining SV thread...
*Debug 10/03 17:24:51.605 Test Controller: joining SV thread complete!
*Debug 10/03 17:24:51.637 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Configured Successfully
*Debug 10/03 17:24:51.637 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIG NETWORK & TRAFFIC        
*Debug 10/03 17:24:51.637 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 10/03 17:24:51.637 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:51.638 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:24:51.638 Test Controller:  PUBLISHING STATE : [ TestController: CONFIGURE TRAFFIC DESTINATIONS  ]
*Debug 10/03 17:24:51.638 Test Controller: **********************************************************************************************
*Debug 10/03 17:24:51.638 Test Controller : ixRunStateHandler received event  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 10/03 17:24:51.671 Test Controller: Test Controller FSM: ENTRY Action for the State: CONFIGURE TRAFFIC DESTINATIONS
*Debug 10/03 17:24:51.683 Test Controller: Total number of communities for this test: 1
*Debug 10/03 17:24:51.717 Port Event Viewer: PortEventHandler enabled on [] but disabled on ['']
*Debug 10/03 17:24:51.737 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIG NETWORK & TRAFFIC', EVENT RECEIVED:  TestController: All Communities Configured Successfully
  NEW STATE: 'TestController: CONFIGURE TRAFFIC DESTINATIONS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:51.740 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:51.740 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configure the traffic destinations
*Debug 10/03 17:24:51.740 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configure the traffic destinations
*Debug 10/03 17:24:51.740 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING TRAFFIC :: Traffic1@Network1 
*Debug 10/03 17:24:51.740 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configure the traffic destinations
*Debug 10/03 17:24:51.740 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING TRAFFIC  
*Debug 10/03 17:24:51.740 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING DESTINATIONS  
*Debug 10/03 17:24:51.740 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURING DESTINATIONS :: Traffic1@Network1 
*Debug 10/03 17:24:51.742 [Traffic1@Network1] Port Controller: copying 394 of file C:/Program Files (x86)/Ixia/IxLoad/8.10-EA/PCPU_DEBUG_CONFIG.xml from position 0 of 394
*Debug 10/03 17:24:51.842 Community Controller: NettrafficFetaures is not multicore on Net-Traffic 'Traffic1@Network1'.
*Debug 10/03 17:24:51.842 Community Controller: KSE Process args: ['-d']
*Debug 10/03 17:24:51.844 [Traffic1@Network1] Port Controller: Starting process kse_[(1,1,5)]='/bin/sh ['/bin/spawn_kse.sh', 'kse', '-d']' on the hosts: [(1,1,5)].
*Debug 10/03 17:24:51.944 Community Controller: **** Apply Activity Configuration for the community: Traffic1@Network1
*Debug 10/03 17:24:51.950 NetTraffic Traffic1@Network1: Configuring Activity
*Debug 10/03 17:24:51.953 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,5)]
*Debug 10/03 17:24:51.957 Traffic Traffic1: Available memory from card 2060409956.
*Debug 10/03 17:24:51.957 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:51.959 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:51.959 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:51.959 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:51.960 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 10/03 17:24:51.961 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                     TCP Ports requirement:
                                     UsersPerIP: 20000 UsersPerPort: 20000 TcpPortsPerUser: 3 Ports required = 0.930060
*Debug 10/03 17:24:51.963 *PCU*: Traffic1@Network1: HTTPClient1: Ports Required CALC:
                                   UDP Ports requirement:
                                   UsersPerIP: 20000 UsersPerPort: 20000 UdpPortsPerUser: 0 Ports required = 0.000000
*Debug 10/03 17:24:51.963 *PCU*: Traffic1@Network1: HTTPClient1: Ports required for memory 0.93005952381, tcp/udp dominance 1
*Debug 10/03 17:24:51.982 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 10/03 17:24:51.986 *PCU*: Traffic1@Network1: HTTPClient1: Objective Performance is 0.0 for objective simulatedUsers cardFamily acceleron-np configId IxStack:
*Debug 10/03 17:24:51.987 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 10/03 17:24:51.987 *PCU*: Traffic1@Network1: HTTPClient1: Ports requirement for agent specified max is 0, objectiveValue 20000, maxObjectiveFromObjectivePerformance 0.0, usingMaxAllowedObjective 0,
*Debug 10/03 17:24:51.989 Traffic Traffic1: Available memory from card 2060409956.
*Debug 10/03 17:24:51.989 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:51.989 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:51.989 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:51.990 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:51.990 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 10/03 17:24:52.2 *PCU*: Network1: Traffic1: Memory required for network is 267168 for 1 interfaces: SM memory of 267168, Kse memory of 0, IPv4 agent specific mem 0, IPv6 agent specific mem 0
*Debug 10/03 17:24:52.5 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 10/03 17:24:52.6 Activity HTTPClient1: objective value for objective type: 'simulatedUsers' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Debug 10/03 17:24:52.7 NetTraffic Traffic1@Network1: Ramp up value for activity 'HTTPClient1' on port (1,1,5) is 1
*Debug 10/03 17:24:52.7 NetTraffic Traffic1@Network1: Ramp down value for activity 'HTTPClient1' on port (1,1,5) is 0
*Debug 10/03 17:24:52.7 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,5)]
*Debug 10/03 17:24:52.9 Traffic Traffic1: Available memory from card 2060409956.
*Debug 10/03 17:24:52.9 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:52.9 Traffic Traffic1: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:52.9 NetTraffic Traffic1@Network1: isAnyPortCaptureEnabled() for Traffic1@Network1 returning False
*Debug 10/03 17:24:52.9 *PCU*: Traffic1@Network1: Available free memory for card Xcellon-Ultra NP, of chassis 192.168.31.42 being used in computation is 2057523670 bytes [Extra Mem = 2886286, Attachment Size = 0, conditional Stats = 0, playlist file size = 0.]
*Debug 10/03 17:24:52.10 *PCU*: Traffic1@Network1: Effective available memory for network and activities is 2057523670, after deducting ixView memory of 0.
*Debug 10/03 17:24:52.12 Community Controller: Attempting to put local protocol script files on ports...
*Debug 10/03 17:24:52.13 [Traffic1@Network1] Port Controller: copying 860 of file C:\Users\Vinoy\AppData\Local\Temp\Ixia\IxLoad\8.10.0.300\tmp1\Timeline1.xml from position 0 of 860
*Debug 10/03 17:24:52.112 Community Controller: Sucessfully put local protocol script files on ports [(1,1,5)]
*Debug 10/03 17:24:52.112 Traffic Traffic1: ixActivityModel::applyRunParams Traffic1 portInfoList [(1,1,5)]
*Debug 10/03 17:24:52.115 NetTraffic Traffic1@Network1: Reporting feature used...
*Debug 10/03 17:24:52.118 [Traffic1@Network1] Port Controller: Establish TCP connection to '127.0.0.1:1012' on the hosts: '[(1,1,5)]'.Channel name is 'Global'
*Debug 10/03 17:24:52.128 [Traffic1@Network1] Port Controller: SIGCHLD[kse_[(1,1,5)] on host (1,1,5)] signal=0, exit=0, uid=1507031691843
*Debug 10/03 17:24:52.128 [Traffic1@Network1] Port Controller: Connection 'kse_[(1,1,5)]' was not active on (1,1,5): Removing from list
*Debug 10/03 17:24:52.128 [Traffic1@Network1] Port Controller: Deleting channel 'kse_[(1,1,5)]'from the connection map.
*Debug 10/03 17:24:52.417 [Traffic1@Network1] Port Controller: Sucessfully established connection to '127.0.0.1:1012'
*Debug 10/03 17:24:52.417 Community Controller: Kse heartbeat is initialized, timeout is 90.
*Debug 10/03 17:24:52.418 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING TRAFFIC', EVENT RECEIVED:  Community Controller: Configure the traffic destinations
  NEW STATE: 'Community Controller: CONFIGURING DESTINATIONS', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:52.418 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:52.420 Community Controller Traffic1@Network1: event ID received =  Community Controller: Configuration Applied
*Debug 10/03 17:24:52.420 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Configuration Applied
*Debug 10/03 17:24:52.420 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING DESTINATIONS :: Traffic1@Network1 
*Debug 10/03 17:24:52.421 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Configuration Applied
*Debug 10/03 17:24:52.421 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING DESTINATIONS  
*Debug 10/03 17:24:52.421 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:52.421 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: COMMUNITY CACHING :: Traffic1@Network1 
*Debug 10/03 17:24:52.421 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING DESTINATIONS', EVENT RECEIVED:  Community Controller: Configuration Applied
  NEW STATE: 'Community Controller: Community  Caching', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:52.421 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:52.421 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 10/03 17:24:52.423 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 10/03 17:24:52.423 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 3 methods 
*Console 10/03 17:24:52.423 : We are caching on <function getKseGlobalChannelMessage at 0x0CEDDF70>
*Debug 10/03 17:24:52.424 Network Network1: Using subrangeInfo ranges to send ranges on port
*Debug 10/03 17:24:52.427 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:52.428 Community Controller: NettrafficFetaures is not multicore on Net-Traffic 'Traffic1@Network1'.
*Debug 10/03 17:24:52.430 Community Controller: kseProcessType=2, numSlaves=0, numCoresSkip=0, numNics=1
*Debug 10/03 17:24:52.430 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 10/03 17:24:52.430 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:52.430 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:52.430 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 10/03 17:24:52.430 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 10/03 17:24:52.430 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 2 methods 
*Console 10/03 17:24:52.430 : We are caching on <function getPcpuConfigForPort at 0x0CDB12B0>
*Debug 10/03 17:24:52.437 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER ACTIVE CONNECTION
*Console 10/03 17:24:52.440 : mem per active connection = 8150
*Debug 10/03 17:24:52.440 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER REQUEST
*Debug 10/03 17:24:52.440 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER IDLE CONNECTION
*Debug 10/03 17:24:52.440 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER ACTIVE SSL CONNECTION
*Console 10/03 17:24:52.447 : mem per active connection = 61720
*Debug 10/03 17:24:52.447 Activity HTTPClient1: CALCULATING MEMORY REQUIREMENT PER IDLE SSL CONNECTION
*Debug 10/03 17:24:52.460 Activity HTTPClient1: The Memory Limits: Available Memory = 2062643414, Memory Per Active Connection = 8150, Memory Per Idle Connection = 1300, Memory Per Active SSL Connection = 61720, Memory Per Idle SSL Connection = 50000. Memory Per Request = 0.
*Debug 10/03 17:24:52.460 Activity HTTPClient1: urlLineCount = 2, kMaxNumberOfUrlLines = 16000, kMaxNumberOfUrlLinesWOCookies = 32000.

*Debug 10/03 17:24:52.463 Activity HTTPClient1: Attempting to put local protocol script files on ports...
*Debug 10/03 17:24:52.463 [Traffic1@Network1] Port Controller: copying 901 of file C:\Users\Vinoy\AppData\Local\Temp\Ixia\IxLoad\8.10.0.300\tmp1\Traffic1@Network1_HTTPClient1Script_1.kse192.168.31.42105 from position 0 of 901
*Info 10/03 17:24:52.539 Network: IP (IP-1) : Partially Configured
*Info 10/03 17:24:52.549 Network: Filter (Filter-1) : Configured statistics
*Info 10/03 17:24:52.549 Network: TCP (TCP-2) : Configured statistics
*Info 10/03 17:24:52.551 Network: DNS (DNS-2) : Configured statistics
*Info 10/03 17:24:52.552 Network: MAC/VLAN (MAC/VLAN-1) : Configured statistics
*Info 10/03 17:24:52.552 Network: IPSecSessionData : Configured
*Info 10/03 17:24:52.556 Network: Meshing (Meshing-1) : Configured
*Info 10/03 17:24:52.558 Network: GratARP (GratARP-1) : Configured
*Debug 10/03 17:24:52.559 Test Controller : Received callback from SM session ApplyConfig
*Debug 10/03 17:24:52.559 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: StackManager session configured successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:52.565 Activity HTTPClient1: Sucessfully put local protocol script files on port (1,1,5)
*Debug 10/03 17:24:52.565 Activity HTTPClient1: For flow HTTPClient1, returning apnId = -1
*Debug 10/03 17:24:52.565 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 10/03 17:24:52.566 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:52.566 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:52.566 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 10/03 17:24:52.566 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 10/03 17:24:52.566 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 1 methods 
*Console 10/03 17:24:52.568 : We are caching on <function getDestinationsIpCount at 0x0CE1F530>
*Debug 10/03 17:24:52.571 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 10/03 17:24:52.571 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:52.571 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:52.571 Community Controller Traffic1@Network1: event ID received =  Community Controller: Cache
*Debug 10/03 17:24:52.572 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Cache
*Debug 10/03 17:24:52.572 Community Controller Traffic1@Network1: Traffic1@Network1:Caching 0 methods 
*Debug 10/03 17:24:52.572 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Cache
*Debug 10/03 17:24:52.572 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:52.638 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:52.638 Test Controller: event ID received =  TestController: StackManager session configured successfully
*Debug 10/03 17:24:52.638 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager session configured successfully
*Debug 10/03 17:24:52.641 Network Network1: Dynamic control plane is inactive for network Network1
*Debug 10/03 17:24:52.641 Test: No DCP stat paths found.
*Debug 10/03 17:24:52.641 Test Controller: INVOKING LAYER 7
*Debug 10/03 17:24:52.641 Test Controller : INVOKING ENABLE LAYER 7
*Debug 10/03 17:24:52.641 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager session configured successfully
*Debug 10/03 17:24:52.641 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Info 10/03 17:24:52.648 Network: IP (IP-1) : Negotiated
*Info 10/03 17:24:52.851 Network: GratARP (GratARP-1) : Configured
*Info 10/03 17:24:52.877 Network: Port Group (Network1) : Layer 7 Enabled
*Info 10/03 17:24:52.878 Network: OK - Meshing (Meshing-1) : Enabling Traffic
*Info 10/03 17:24:53.88 Network: Meshing (Meshing-1) : Traffic Enabled
*Debug 10/03 17:24:53.88 Test Controller : received EnableLayer7 callback from SM
*Debug 10/03 17:24:53.91 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: StackManager network configured successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:24:53.142 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:24:53.142 Test Controller: event ID received =  TestController: StackManager network configured successfully
*Debug 10/03 17:24:53.142 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: StackManager network configured successfully
*Info 10/03 17:24:53.144 Test Controller: Network configured successfully
*Debug 10/03 17:24:53.167 Stat Controller: configSvAfterTestConfigured testEnvelopeChanged = True
*Debug 10/03 17:24:53.167 Stat Controller: setConditionAndDrillDownMap start
*Debug 10/03 17:24:53.176 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:53.177 Community Controller Traffic1@Network1: event ID received =  Community Controller: StackManager Configured
*Debug 10/03 17:24:53.178 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: StackManager Configured
*Debug 10/03 17:24:53.181 Community Controller Traffic1@Network1: _TransActionStackManagerConfigured for the community Traffic1@Network1
*Debug 10/03 17:24:53.183 Stat Controller: conditionalViewEnabled=False
*Debug 10/03 17:24:53.190 [Traffic1@Network1] Port Controller: Starting process ixload_set_params.sh='/bin/sh ['/bin/ixload_set_params.sh']' on the hosts: [(1,1,5)].
*Debug 10/03 17:24:53.190 NetTraffic Traffic1@Network1: isConditionalViewSupported result=False self.name=Traffic1@Network1 isConditionalViewPerUser=True agentsRequest=False
*Debug 10/03 17:24:53.193 Stat Controller: addNetworkTraffics - Activity HTTPClient1 statSource HTTP Client Per URL is added to map
*Debug 10/03 17:24:53.193 Stat Controller: addNetworkTraffics - Activity HTTPClient1 statSource HTTP Client is added to map
*Debug 10/03 17:24:53.196 Stat Controller: addNetworkTraffics - Port 192.168.31.42/Card1/Port5 is added to activity HTTPClient1 map
*Debug 10/03 17:24:53.197 Stat Controller: addNetworkTraffics - Activity HTTPClient1 is added to map
*Debug 10/03 17:24:53.206 Stat Controller: SetPerSessionTable statSource='PerSubscriber' mapId=u'IxLoad.PerSubscriber' mapStatus=1 mapType=u'IxLoad.PerSubscriber'
*Debug 10/03 17:24:53.227 Stat Controller: DONE setting perSessionTable for statSource=PerSubscriber
*Debug 10/03 17:24:53.227 Stat Controller: setConditionAndDrillDownMap finish
*Debug 10/03 17:24:53.227 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: StackManager network configured successfully
*Debug 10/03 17:24:53.227 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 10/03 17:24:53.305 Network Network1: Traffic1@Network1 - Network Applyconfig timeout is 600
*Debug 10/03 17:24:53.305 Test: Frame size distribution view NOT SUPPORTED - Test option is not enabled
*Debug 10/03 17:24:53.306 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: COMMUNITY CACHING :: Traffic1@Network1 
*Debug 10/03 17:24:53.306 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: StackManager Configured
*Debug 10/03 17:24:53.306 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: Community  Caching  
*Debug 10/03 17:24:53.306 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:24:53.308 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: Configuring Activities  :: Traffic1@Network1 
*Debug 10/03 17:24:53.308 Community Controller: Computing gc_thresh value for agent HTTPClient1 in traffic Traffic1.
*Debug 10/03 17:24:53.308 Community Controller: [Client-GC_THRESH DEBUG] Calculated gc_threash value for agent HTTPClient1 in traffic Traffic1 for port (1,1,5) is 1.
*Debug 10/03 17:24:53.309 Community Controller: [Client-GC_THRESH DEBUG] Calculated gc_threash value for agent HTTPClient1 in traffic Traffic1 for port (1,1,5) is 1.
*Debug 10/03 17:24:53.354 [Traffic1@Network1] Port Controller: SIGCHLD[ixload_set_params.sh on host (1,1,5)] signal=0, exit=0, uid=1507031693184
*Debug 10/03 17:24:53.354 [Traffic1@Network1] Port Controller: Connection 'ixload_set_params.sh' was not active on (1,1,5): Removing from list
*Debug 10/03 17:24:53.354 [Traffic1@Network1] Port Controller: Deleting channel 'ixload_set_params.sh'from the connection map.
*Debug 10/03 17:24:53.608 [Traffic1@Network1] Port Controller: (1,1,5): setGcThresh: values set: gc_thresh2 = 4; gc_thresh3 = 500004
*Console 10/03 17:24:53.608 : We are returning from cache <function getKseGlobalChannelMessage at 0x0CEDDF70>
*Debug 10/03 17:24:53.609 ixKseCommunicator Global: Sending on ports [(1,1,5)]:'<ixlagent-configure-request request-id="1507031692" activityName="Global" port-id="0"><port-information>
<chassis-id>1</chassis-id>
<card-id>1</card-id>
<port-num>5</port-num>
<nic-num>1</nic-num>
<active-port>-1</active-port>
</port-information>

<lan>
    <ip-overlapping-status>0</ip-overlapping-status>
    <parallel_session_initiation_in_dcp_mode>0</parallel_session_initiation_in_dcp_mode>
    <gratuitous-arp>1</gratuitous-arp>
    
<TcpParams>
    <rxBufSize>4096</rxBufSize>
    <txBufSize>4096</txBufSize>
    <finTimeout>60</finTimeout>
    <synRetries>5</synRetries>
    <synAckRetries>5</synAckRetries>
    <retransmitRetries>5</retransmitRetries>
</TcpParams>

    <ranges>
        
<range>
    <node-type>3</node-type>
    <dcp-status>0</dcp-status>
    <ps-core>0</ps-core>
    <layer-name>aptixia-T.3cd3852c.15ae.4bed.819c.4a141200d644-L2EthernetPlugin-3d771e0b.0273.4638.94c4.8bab5e9c744e-192.168.31.42;1;5default</layer-name>
    <mac-layer-name>aptixia-T.3cd3852c.15ae.4bed.819c.4a141200d644-L2EthernetPlugin-3d771e0b.0273.4638.94c4.8bab5e9c744e-192.168.31.42;1;5default</mac-layer-name>
    <node>200000</node>
    <node-step>1</node-step>
    <node-count>1</node-count>
    <mss>1460</mss>
    <ipSourcePortFrom>1024</ipSourcePortFrom>
    <ipSourcePortTo>65535</ipSourcePortTo>
    
</range>

    </ranges>
    
</lan>
<granular-stat-type>0</granular-stat-type><subscriber-mode>0</subscriber-mode><num-slaves>0</num-slaves><num-cores-skip>0</num-cores-skip><num-nics>1</num-nics>
<dsr-hook-configuration/>
</ixlagent-configure-request>'.
*Debug 10/03 17:24:53.611 Community Controller: Port Id 192.168.31.42;1;5 timer added.
*Debug 10/03 17:24:53.611 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: Community  Caching', EVENT RECEIVED:  Community Controller: StackManager Configured
  NEW STATE: 'Community Controller: CONFIGURING Activities', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:24:53.660 ixKseCommunicator Global: Got from port (1,1,5): '<ixlagent-configure-response request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:24:53.661 ixKseCommunicator Global: Handling ixlagent message from port (1,1,5): '<ixlagent-configure-response request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:24:53.661 Traffic1@Network1: Traffic1@Network1: got response for requestType configure on port 0
*Debug 10/03 17:24:53.661 Community Controller: Port Id 192.168.31.42;1;5 task done.
*Debug 10/03 17:24:53.713 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:53.713 Community Controller Traffic1@Network1: event ID received =  Community Controller: Global Config Response Received
*Debug 10/03 17:24:53.713 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Global Config Response Received
*Debug 10/03 17:24:53.723 [Traffic1@Network1] Port Controller: Establish TCP connection to '127.0.0.1:1012' on the hosts: '[(1,1,5)]'.Channel name is 'HTTPClient1'
*Debug 10/03 17:24:54.23 [Traffic1@Network1] Port Controller: Sucessfully established connection to '127.0.0.1:1012'
*Debug 10/03 17:24:54.36 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --ENTERING STATE--:'Unconfigured'
*Debug 10/03 17:24:54.36 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STATE CHANGED-- from 'null' to 'Unconfigured' after handling event 'null'
*Debug 10/03 17:24:54.42 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT RECEIVED--: 'Configure Request' in state 'Unconfigured'
*Debug 10/03 17:24:54.45 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Global Config Response Received
*Debug 10/03 17:24:54.46 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:24:54.48 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --PROCESSING EVENT--: 'Configure Request' in  state 'Unconfigured'
*Debug 10/03 17:24:54.49 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXITING STATE--:'Unconfigured'
*Debug 10/03 17:24:54.49 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXECUTING TRANSITION--:'Generic: transition=SendConfigRequest guard=null' in state 'Unconfigured'
*Console 10/03 17:24:54.52 : We are returning from cache <function getPcpuConfigForPort at 0x0CDB12B0>
*Debug 10/03 17:24:54.52 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,5)]:'<ixlagent-configure-request request-id="1507031693" activityName="HTTPClient1" port-id="0"><flows><http><name>HTTPClient1</name><agentUniqueID>0</agentUniqueID><apnID>-1</apnID><script>/tmp/port1/HTTPClient1Script_1.kse</script></http></flows><constraints/><memory><availableMemory>2057523670</availableMemory><maxDynamicMemPerConn>6850</maxDynamicMemPerConn><maxIdleMem>1300</maxIdleMem></memory><using-kone>1</using-kone><user-ip-rule>1-TO-1</user-ip-rule><destination-ip-rule>Consecutive</destination-ip-rule><destination-blowup-rule>ConfigTime-Blowup</destination-blowup-rule><random-seed>0</random-seed></ixlagent-configure-request>'.
*Debug 10/03 17:24:54.52 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT PROCESSED--: 'Configure Request' Result='Handled' in state 'Unconfigured'
*Debug 10/03 17:24:54.52 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --ENTERING STATE--:'Configure Request'
*Debug 10/03 17:24:54.52 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STARTING TIMER-- for state'Configure Request'
*Debug 10/03 17:24:54.52 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STATE CHANGED-- from 'Unconfigured' to 'Configure Request' after handling event 'Configure Request'
*Debug 10/03 17:24:55.177 ixKseCommunicator HTTPClient1: Got from port (1,1,5): '<ixlagent-configure-response request-id="1507031693" activityName="HTTPClient1" port-id="0"/>'
*Debug 10/03 17:24:55.178 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,5): '<ixlagent-configure-response request-id="1507031693" activityName="HTTPClient1" port-id="0"/>'
*Debug 10/03 17:24:55.180 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT RECEIVED--: 'Configure Response' in state 'Configure Request'
*Debug 10/03 17:24:55.180 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --PROCESSING EVENT--: 'Configure Response' in  state 'Configure Request'
*Debug 10/03 17:24:55.181 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STOPPING TIMER-- for state'Configure Request'
*Debug 10/03 17:24:55.181 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXITING STATE--:'Configure Request'
*Debug 10/03 17:24:55.181 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Configure Request'
*Console 10/03 17:24:55.184 : objectiveType Simulated Users
*Debug 10/03 17:24:55.187 Activity HTTPClient1: objective value for objective type: 'throughputKBps' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 10/03 17:24:55.187 : objectiveType Simulated Users
*Debug 10/03 17:24:55.190 Activity HTTPClient1: objective value for objective type: 'connectionRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 10/03 17:24:55.190 : objectiveType Simulated Users
*Debug 10/03 17:24:55.193 Activity HTTPClient1: objective value for objective type: 'transactionRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 10/03 17:24:55.194 : objectiveType Simulated Users
*Debug 10/03 17:24:55.196 Activity HTTPClient1: objective value for objective type: 'packetTxRate' for license level: '0' is not specified for HTTP client; providing default value: '2147483647'
*Console 10/03 17:24:55.197 : objectiveType Simulated Users
*Console 10/03 17:24:55.197 : tpsVal -1, cpsVal -1
*Debug 10/03 17:24:55.197 ixKseCommunicator HTTPClient1: Sending on ports [(1,1,5)]:'<ixlagent-set-objective-request request-id="1507031693" activityName="HTTPClient1" port-id="0"><run-parameters type="ClientRunParameters"><disableTimeline>0</disableTimeline><totalNumberOfIterations>1</totalNumberOfIterations><duration>-1</duration><portId>0</portId><portCount>1</portCount><maxNumberOfUsers>21504</maxNumberOfUsers><objective type="simulatedUsersCurve"><fileName>/tmp/Timeline1.xml</fileName><scaleFactor>20000.0</scaleFactor><maxobjectives><connectionRate>-1</connectionRate><transactionRate>-1</transactionRate><throughputKBps>-1</throughputKBps><packetTxRate>-1</packetTxRate></maxobjectives><flowDistribution><flowObjective><flowName>HTTPClient1</flowName><percentage>10000</percentage></flowObjective></flowDistribution><timerGranularity>-1</timerGranularity></objective><rampDown>10</rampDown><rampDownValue>0</rampDownValue></run-parameters></ixlagent-set-objective-request>'.
*Debug 10/03 17:24:55.198 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT PROCESSED--: 'Configure Response' Result='Handled' in state 'Configure Request'
*Debug 10/03 17:24:55.198 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --ENTERING STATE--:'Set Objective Request'
*Debug 10/03 17:24:55.198 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STARTING TIMER-- for state'Set Objective Request'
*Debug 10/03 17:24:55.198 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STATE CHANGED-- from 'Configure Request' to 'Set Objective Request' after handling event 'Configure Response'
*Debug 10/03 17:24:55.240 ixKseCommunicator HTTPClient1: Got from port (1,1,5): '<ixlagent-set-objective-response request-id="1507031693" activityName="HTTPClient1" port-id="0"/>'
*Debug 10/03 17:24:55.240 ixKseCommunicator HTTPClient1: Handling ixlagent message from port (1,1,5): '<ixlagent-set-objective-response request-id="1507031693" activityName="HTTPClient1" port-id="0"/>'
*Debug 10/03 17:24:55.242 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT RECEIVED--: 'SetObj Response' in state 'Set Objective Request'
*Debug 10/03 17:24:55.243 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --PROCESSING EVENT--: 'SetObj Response' in  state 'Set Objective Request'
*Debug 10/03 17:24:55.243 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STOPPING TIMER-- for state'Set Objective Request'
*Debug 10/03 17:24:55.243 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXITING STATE--:'Set Objective Request'
*Debug 10/03 17:24:55.243 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EXECUTING TRANSITION--:'Generic: transition=GotKseResponse guard=CheckIfAllPortsDone' in state 'Set Objective Request'
*Debug 10/03 17:24:55.244 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --EVENT PROCESSED--: 'SetObj Response' Result='Handled' in state 'Set Objective Request'
*Debug 10/03 17:24:55.244 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --ENTERING STATE--:'Configured'
*Debug 10/03 17:24:55.246 Traffic1 HTTPClient1:   *** HSM 'Traffic1_HTTPClient1_1' --STATE CHANGED-- from 'Set Objective Request' to 'Configured' after handling event 'SetObj Response'
*Debug 10/03 17:24:55.246 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:55.246 Community Controller Traffic1@Network1: event ID received =  Community Controller: Activity Configured
*Debug 10/03 17:24:55.246 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Activity Configured
*Debug 10/03 17:24:55.246 Community Controller Traffic1@Network1: Activities Configured Successfully for the community: Traffic1@Network1
*Debug 10/03 17:24:55.246 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Activity Configured
*Debug 10/03 17:24:55.247 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:24:55.247 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:24:55.247 Community Controller Traffic1@Network1: event ID received =  Community Controller: Send Global Config Complete Request
*Debug 10/03 17:24:55.249 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Send Global Config Complete Request
*Debug 10/03 17:24:55.249 ixKseCommunicator Global: Sending on ports [(1,1,5)]:'<ixlagent-complete-configuration-request request-id="1507031692" activityName="Global" port-id="0"/>'.
*Debug 10/03 17:24:55.249 Community Controller: Port Id 192.168.31.42;1;5 timer added.
*Debug 10/03 17:24:55.249 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Send Global Config Complete Request
*Debug 10/03 17:24:55.250 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:24:55.842 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031695.84.
*Debug 10/03 17:24:57.904 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031697.9.
*Debug 10/03 17:25:00.5 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031700.01.
*Debug 10/03 17:25:02.105 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031702.11.
*Debug 10/03 17:25:04.204 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031704.2.
*Debug 10/03 17:25:06.305 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031706.31.
*Debug 10/03 17:25:08.404 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031708.4.
*Debug 10/03 17:25:10.505 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031710.51.
*Debug 10/03 17:25:12.605 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031712.61.
*Debug 10/03 17:25:14.704 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031714.7.
*Debug 10/03 17:25:15.707 ixKseCommunicator Global: Got from port (1,1,5): '<keep-alive request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:15.707 ixKseCommunicator Global: Handling heartBeat message from port (1,1,5): '<keep-alive request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:15.707 Community Controller: Port Id 192.168.31.42;1;5 timer not updated because initial timer did not reach the threshold.
*Debug 10/03 17:25:16.759 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031716.76.
*Debug 10/03 17:25:18.858 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031718.86.
*Debug 10/03 17:25:20.957 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031720.96.
*Debug 10/03 17:25:23.58 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031723.06.
*Debug 10/03 17:25:25.108 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031725.11.
*Debug 10/03 17:25:27.209 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031727.21.
*Debug 10/03 17:25:29.308 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031729.31.
*Debug 10/03 17:25:31.407 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031731.41.
*Debug 10/03 17:25:33.509 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031733.51.
*Debug 10/03 17:25:35.608 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031735.61.
*Debug 10/03 17:25:36.710 ixKseCommunicator Global: Got from port (1,1,5): '<keep-alive request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:36.710 ixKseCommunicator Global: Handling heartBeat message from port (1,1,5): '<keep-alive request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:36.710 Community Controller: Port Id 192.168.31.42;1;5 timer not updated because initial timer did not reach the threshold.
*Debug 10/03 17:25:37.661 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031737.66.
*Debug 10/03 17:25:39.760 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031739.76.
*Debug 10/03 17:25:41.861 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031741.86.
*Debug 10/03 17:25:43.960 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031743.96.
*Debug 10/03 17:25:46.61 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031746.06.
*Debug 10/03 17:25:48.161 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031748.16.
*Debug 10/03 17:25:50.260 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031750.26.
*Debug 10/03 17:25:52.361 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031752.36.
*Debug 10/03 17:25:54.460 Community Controller: Kse heartbeat checkTimeForPortId 192.168.31.42;1;5, port time: 1507031695.25, current time 1507031754.46.
*Debug 10/03 17:25:55.349 ixKseCommunicator Global: Got from port (1,1,5): '<ixlagent-complete-configuration-response request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:55.349 ixKseCommunicator Global: Handling ixlagent message from port (1,1,5): '<ixlagent-complete-configuration-response request-id="1507031692" activityName="Global" port-id="0"/>'
*Debug 10/03 17:25:55.351 Traffic1@Network1: Traffic1@Network1: got response for requestType complete-configuration on port 0
*Debug 10/03 17:25:55.351 Community Controller: Port Id 192.168.31.42;1;5 task done.
*Debug 10/03 17:25:55.450 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:25:55.450 Community Controller Traffic1@Network1: event ID received =  Community Controller: Community traffic destinations configured successfully
*Debug 10/03 17:25:55.450 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Community traffic destinations configured successfully
*Debug 10/03 17:25:55.450 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Community traffic destinations configured successfully
*Debug 10/03 17:25:55.450 ixFSM:   *** FSM Community Controller Traffic1@Network1 --INTERNAL EVENT. STAYING IN STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:25:55.450 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:25:55.450 Community Controller Traffic1@Network1: event ID received =  Community Controller: Networks updated
*Debug 10/03 17:25:55.451 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: Networks updated
*Debug 10/03 17:25:55.451 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: CONFIGURING ACTIVITIES :: Traffic1@Network1 
*Debug 10/03 17:25:55.451 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  Community Controller: Community traffic activities configured successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:25:55.453 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: Networks updated
*Debug 10/03 17:25:55.453 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: CONFIGURING Activities  
*Debug 10/03 17:25:55.453 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: Wait For InfoProvider
*Debug 10/03 17:25:55.453 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: CONFIGURING Activities', EVENT RECEIVED:  Community Controller: Networks updated
  NEW STATE: 'Community Controller: Wait For InfoProvider', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:25:55.453 Community Controller Traffic1@Network1: Fetching the next event from the queue
*Debug 10/03 17:25:55.454 Community Controller Traffic1@Network1: event ID received =  Community Controller: InfoProvider Configured
*Debug 10/03 17:25:55.454 ixFSM:   *** FSM Community Controller Traffic1@Network1: --EVENT RECEIVED--:  Community Controller: InfoProvider Configured
*Debug 10/03 17:25:55.454 Community Controller Traffic1@Network1: Community Controller FSM: EXIT Action for the State: WaitForInfoProvider :: Traffic1@Network1 
*Debug 10/03 17:25:55.454 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EVENT PROCESSED--:  Community Controller: InfoProvider Configured
*Debug 10/03 17:25:55.456 ixFSM:   *** FSM Community Controller Traffic1@Network1 --EXITING STATE--:  Community Controller: Wait For InfoProvider
*Debug 10/03 17:25:55.456 ixFSM:   *** FSM Community Controller Traffic1@Network1 --ENTERING STATE--:  Community Controller: CONFIGURED           
*Debug 10/03 17:25:55.456 Community Controller Traffic1@Network1: Community Controller FSM: ENTRY Action for the State: CONFIGURED  :: Traffic1@Network1 
*Debug 10/03 17:25:55.457 Community Controller: Clearing cache on Traffic1@Network1
*Debug 10/03 17:25:55.457 Community Controller: Community cache cleared on Traffic1@Network1 .
*Debug 10/03 17:25:55.457 Community Controller Traffic1@Network1: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Community Controller Traffic1@Network1, TEST NAME: Test1, PREV STATE: 'Community Controller: Wait For InfoProvider', EVENT RECEIVED:  Community Controller: InfoProvider Configured
  NEW STATE: 'Community Controller: CONFIGURED', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:25:55.528 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:25:55.528 Test Controller: event ID received =  Community Controller: Community traffic activities configured successfully
*Debug 10/03 17:25:55.529 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  Community Controller: Community traffic activities configured successfully
*Debug 10/03 17:25:55.529 Test Controller: Test Controller FSM: Internal Transition Action: checkAllCommDestinationsConfigured()
*Debug 10/03 17:25:55.529 Test Controller: Configured destinations for 1 of 1 communities
*Debug 10/03 17:25:55.529 Port Event Viewer: PortEventHandler enabled on [] but disabled on ['']
*Debug 10/03 17:25:55.529 Test Controller: testName = Test1 ; stateName =  TestController: CONFIGURE TRAFFIC DESTINATIONS  ; eventId =  TestController: All Communities Destinations Configured Successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:25:55.529 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  Community Controller: Community traffic activities configured successfully
*Debug 10/03 17:25:55.529 ixFSM:   *** FSM Test Controller --INTERNAL EVENT. STAYING IN STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 10/03 17:25:55.529 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:25:55.530 Test Controller: event ID received =  TestController: All Communities Destinations Configured Successfully
*Debug 10/03 17:25:55.530 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: All Communities Destinations Configured Successfully
*Debug 10/03 17:25:55.723 Test Controller: Test Controller FSM: EXIT Action for the State: CONFIGURE TRAFFIC DESTINATIONS
*Debug 10/03 17:25:55.734 Stat Controller: configSvAfterTestConfigured testEnvelopeChanged = False
*Debug 10/03 17:25:55.755 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: All Communities Destinations Configured Successfully
*Debug 10/03 17:25:55.755 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: CONFIGURE TRAFFIC DESTINATIONS  
*Debug 10/03 17:25:55.755 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: FINAL CONFIGURATION             
*Debug 10/03 17:25:55.756 Test Controller: **********************************************************************************************
*Debug 10/03 17:25:55.756 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:25:55.756 Test Controller:  PUBLISHING STATE : [ TestController: FINAL CONFIGURATION             ]
*Debug 10/03 17:25:55.756 Test Controller: **********************************************************************************************
*Debug 10/03 17:25:55.756 Test Controller : ixRunStateHandler received event  TestController: FINAL CONFIGURATION             
*Debug 10/03 17:25:55.775 Test Controller: Test Controller FSM: ENTRY Action for the State: FINAL CONFIGURATION
*Debug 10/03 17:25:55.776 Test Controller: self._gatewayArpRequired= False
*Debug 10/03 17:25:55.776 Test Controller: testName = Test1 ; stateName =  TestController: FINAL CONFIGURATION             ; eventId =  TestController: Configuration Finalized Successfully ; errDescription = None ; details = None; status = None
*Debug 10/03 17:25:55.796 Test Controller: ***********************PUBLISHING STATE CHANGE EVENT***********************
  PUBLISHER MODULE: Test Controller, TEST NAME: Test1, PREV STATE: 'TestController: CONFIGURE TRAFFIC DESTINATIONS', EVENT RECEIVED:  TestController: All Communities Destinations Configured Successfully
  NEW STATE: 'TestController: FINAL CONFIGURATION', DESCRIPTION: None, DETAILS: None, STATUS: None
*Debug 10/03 17:25:55.796 Test Controller: Fetching the next event from the queue
*Debug 10/03 17:25:55.796 Test Controller: event ID received =  TestController: Configuration Finalized Successfully
*Debug 10/03 17:25:55.796 ixFSM:   *** FSM Test Controller: --EVENT RECEIVED--:  TestController: Configuration Finalized Successfully
*Debug 10/03 17:25:55.796 Test Controller: Test Controller FSM: Internal Transition Action: configurationCompleted()
*Debug 10/03 17:25:55.796 Test Controller: [ Stopping the Configuring Watch Dog Timer. ] Timer ID = 1
*Debug 10/03 17:25:55.796 Event Scheduler: REMOVE Event(). Removing Event Index 1
*Debug 10/03 17:25:55.796 Event Scheduler: Stopping the timer: Event Index 1, timer (1507034083.645, 0, <bound method ixEventScheduler.callback of <Lib.Common.ixEventScheduler.ixEventScheduler object at 0x24D8C370>>, (1,))
*Debug 10/03 17:25:55.796 Event Scheduler: deleting the event 1
*Debug 10/03 17:25:55.805 Stat Controller: Stat Manager RefreshQueryEngineProfile
*Debug 10/03 17:25:55.842 ixFSM:   *** FSM Test Controller --EVENT PROCESSED--:  TestController: Configuration Finalized Successfully
*Debug 10/03 17:25:55.842 ixFSM:   *** FSM Test Controller --EXITING STATE--:  TestController: FINAL CONFIGURATION             
*Debug 10/03 17:25:55.842 ixFSM:   *** FSM Test Controller --ENTERING STATE--:  TestController: RUN INIT                        
*Debug 10/03 17:25:55.842 Test Controller: **********************************************************************************************
*Debug 10/03 17:25:55.842 Test Controller:              PUBLISHING PRESTATE CHANGE EVENT       
*Debug 10/03 17:25:55.842 Test Controller:  PUBLISHING STATE : [ TestController: RUN INIT                        ]
*Debug 10/03 17:25:55.842 Test Controller: **********************************************************************************************
*Debug 10/03 17:25:55.842 Test Controller : ixRunStateHandler received event  TestController: RUN INIT                        
*Debug 10/03 17:25:55.858 Test Controller: Test Controller FSM: ENTRY Action for the State: RUN INIT
*Debug 10/03 17:25:55.858 IxAnalyzer : Analyzer - set test state - 2
*Debug 10/03 17:25:55.858 Test Controller: Memory Trim Timer fired. Trimming working set.
*Debug 10/03 17:25:55.891 Test Controller: Memory Trim complete.
*Debug 10/03 17:25:55.892 Test Controller: Checking free disk space: freeToUser=8697057280; total=243086127104 totalFree=8697057280. StopTest Limit=536870912.0. Warning Limit=1073741824.0.
*Debug 10/03 17:25:55.892 Test Controller: Drive C: has 8.10 GB of free disk space
*Debug 10/03 17:25:55.892 Test Controller : checkLinkStateAllPorts()
*Debug 10/03 17:25:55.892 Network Network1: checkLinkState()
*Debug 10/03 17:25:55.894 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:55.931 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:55.931 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:55.931 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:56.433 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:56.453 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:56.453 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:56.454 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:56.954 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:56.974 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:56.976 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:56.976 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:57.476 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:57.500 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:57.500 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:57.500 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:58.0 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:58.19 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:58.20 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:58.20 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:58.520 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:58.592 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:58.594 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:58.594 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:59.94 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:59.115 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:59.115 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:59.115 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:25:59.615 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:25:59.640 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:25:59.641 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:25:59.641 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:00.141 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:00.219 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:00.219 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:00.220 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:00.720 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:00.743 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:00.743 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:00.743 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:01.243 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:01.265 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:01.266 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:01.266 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:01.766 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:01.786 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:01.786 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:01.786 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:02.286 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:02.312 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:02.312 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:02.312 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:02.813 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:02.835 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:02.835 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:02.835 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:03.335 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:03.405 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:03.405 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:03.407 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:03.907 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:03.927 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:03.927 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:03.927 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:04.427 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:04.453 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:04.453 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:04.453 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:04.953 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:05.30 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:05.30 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:05.32 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:05.532 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:05.552 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:05.552 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:05.552 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:06.52 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:06.78 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:06.78 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:06.78 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:06.578 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:06.655 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:06.657 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:06.657 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:07.157 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:07.177 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:07.177 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:07.177 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:07.678 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:07.703 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:07.703 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:07.703 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:08.203 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:08.296 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:08.296 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:08.298 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:08.798 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:08.819 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:08.819 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:08.821 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:09.321 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:09.344 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:09.344 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:09.344 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:09.845 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:09.865 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:09.865 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:09.865 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:10.365 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:10.391 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:10.391 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:10.391 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:10.891 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:10.967 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:10.969 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:10.969 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:11.469 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:11.490 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:11.490 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:11.490 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:11.990 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:12.16 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:12.16 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:12.16 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:12.516 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:12.594 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:12.594 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:12.594 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:13.95 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:13.115 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:13.115 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:13.117 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:13.617 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:13.641 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:13.641 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:13.641 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:14.141 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:14.217 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:14.219 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:14.219 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:14.719 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:14.756 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:14.756 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:14.756 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:15.256 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:15.280 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:15.282 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:15.282 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:15.782 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:15.802 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:15.802 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:15.802 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:16.303 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:16.328 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:16.328 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:16.328 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:16.828 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:16.851 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:16.851 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:16.851 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:17.351 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:17.375 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:17.375 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:17.375 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:17.875 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:17.898 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:17.898 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:17.898 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:18.398 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:18.469 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:18.469 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:18.469 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:18.969 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:18.987 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:18.987 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:18.987 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:19.487 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:19.506 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:19.506 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:19.506 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:20.7 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:20.30 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:20.30 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:20.30 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:20.530 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:20.549 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:20.549 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:20.549 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:21.49 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:21.69 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:21.69 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:21.69 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:21.569 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:21.592 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:21.594 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:21.594 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:22.94 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:22.112 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:22.112 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:22.112 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:22.612 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:22.631 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:22.631 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:22.631 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:23.131 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:23.155 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:23.155 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:23.155 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:23.655 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:23.719 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:23.719 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:23.719 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:24.219 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:24.237 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:24.237 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:24.237 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:24.737 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:24.803 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:24.803 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:24.803 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:25.303 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:25.405 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:25.405 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:25.407 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:25.907 Chassis Chain: Link down ports = [(1,1,5)]
*Debug 10/03 17:26:25.907 Chassis Chain: Total wait time for ports to link up = 30.0130000114, max wait time = 30
*Debug 10/03 17:26:25.907 Network Network1: Link down on the following ports: [[1, 1, 5]]
*Debug 10/03 17:26:25.907 Network Network1: checkLinkState() returning [(1,1,5)]
*Debug 10/03 17:26:25.907 Test Controller : Loop 1 to reset links on [(1,1,5)]
*Info 10/03 17:26:25.907 Chassis Chain: Reset link on link down ports [(1,1,5)] ...
*Debug 10/03 17:26:25.921 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:26.89 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:26.91 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:26.91 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:26.591 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:26.655 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:26.655 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:26.655 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:27.157 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:27.174 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:27.176 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:27.176 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:27.676 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:27.694 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:27.696 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:27.696 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:28.196 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:28.219 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:28.219 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:28.219 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:28.719 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:28.737 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:28.737 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:28.737 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:29.239 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:29.259 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:29.259 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:29.259 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:29.759 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:29.780 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:29.780 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:29.780 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:30.282 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:30.301 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:30.301 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:30.301 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:30.801 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:30.819 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:30.819 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:30.819 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:31.321 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:31.344 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:31.344 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:31.344 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:31.844 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:31.862 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:31.862 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:31.862 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:32.362 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:32.381 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:32.382 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:32.382 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:32.882 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:32.907 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:32.907 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:32.907 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:33.407 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:33.428 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:33.428 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:33.430 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:33.930 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:33.953 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:33.953 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:33.953 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:34.453 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:34.726 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:34.726 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:34.726 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:35.226 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:35.250 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:35.252 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:35.252 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:35.752 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:35.779 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:35.779 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:35.779 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:36.279 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:36.306 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:36.306 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:36.306 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:36.808 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:36.828 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:36.828 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:36.828 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:37.328 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:37.348 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:37.349 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:37.349 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:37.849 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:37.875 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:37.875 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:37.875 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:38.375 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:38.395 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:38.397 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:38.397 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:38.897 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:38.969 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:38.970 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:38.970 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:39.470 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:39.490 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:39.490 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:39.490 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:39.992 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:40.16 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:40.16 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:40.17 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:40.517 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:40.538 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:40.539 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:40.539 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:41.39 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:41.62 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:41.63 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:41.63 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:41.563 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:41.585 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:41.585 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:41.585 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:42.85 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:42.115 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:42.115 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:42.115 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:42.615 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:42.644 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:42.644 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:42.644 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:43.145 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:43.220 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:43.220 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:43.220 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:43.720 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:43.740 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:43.742 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:43.742 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:44.242 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:44.266 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:44.266 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:44.266 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:44.766 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:44.861 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:44.861 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:44.861 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:45.361 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:45.391 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:45.391 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:45.392 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:45.892 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:45.969 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:45.970 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:45.970 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:46.470 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:46.490 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:46.490 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:46.490 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:46.992 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:47.16 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:47.16 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:47.16 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:47.517 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:47.594 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:47.595 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:47.595 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:48.95 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:48.115 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:48.115 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:48.115 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:48.617 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:48.641 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:48.641 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:48.641 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:49.141 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:49.220 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:49.220 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:49.220 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:49.720 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:49.742 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:49.742 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:49.742 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:50.243 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:50.345 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:50.345 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:50.345 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:50.845 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:50.867 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:50.867 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:50.867 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:51.367 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:51.391 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:51.391 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:51.391 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:51.891 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:51.970 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:51.970 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:51.970 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:52.470 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:52.492 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:52.492 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:52.492 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:52.993 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:53.16 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:53.16 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:53.17 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:53.517 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:53.595 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:53.595 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:53.595 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:54.95 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:54.125 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:54.125 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:54.125 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:54.625 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:54.644 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:54.645 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:54.645 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:55.145 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:55.220 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:55.220 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:55.220 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:55.720 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:55.740 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:55.742 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:55.742 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:56.242 Chassis Chain: Link down ports = [(1,1,5)]
*Debug 10/03 17:26:56.242 Chassis Chain: Total wait time for ports to link up = 30.3210000992, max wait time = 30
*Debug 10/03 17:26:56.242 Test Controller : After resetting links, linkDownIxPortList = [(1,1,5)]
*Debug 10/03 17:26:56.242 Test Controller : Loop 2 to reset links on [(1,1,5)]
*Info 10/03 17:26:56.242 Chassis Chain: Reset link on link down ports [(1,1,5)] ...
*Debug 10/03 17:26:56.255 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:56.421 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:56.421 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:56.423 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:56.923 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:57.32 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:57.32 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:57.32 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:57.533 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:57.552 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:57.552 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:57.552 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:58.52 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:58.78 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:58.78 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:58.79 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:58.579 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:58.657 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:58.657 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:58.657 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:59.157 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:59.177 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:59.177 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:59.177 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:26:59.677 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:26:59.697 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:26:59.697 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:26:59.697 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:00.197 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:00.226 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:00.226 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:00.226 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:00.726 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:00.753 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:00.755 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:00.755 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:01.255 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:01.276 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:01.276 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:01.276 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:01.776 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:01.845 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:01.845 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:01.845 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:02.345 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:02.365 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:02.365 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:02.367 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:02.867 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:02.891 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:02.891 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:02.891 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:03.392 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:03.470 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:03.470 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:03.470 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:03.970 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:03.992 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:03.992 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:03.992 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:04.492 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:04.516 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:04.517 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:04.517 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:05.17 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:05.95 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:05.95 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:05.95 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:05.595 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:05.617 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:05.617 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:05.618 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:06.118 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:06.141 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:06.141 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:06.142 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:06.642 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:06.720 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:06.720 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:06.720 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:07.220 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:07.242 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:07.242 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:07.243 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:07.743 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:07.766 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:07.766 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:07.767 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:08.267 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:08.345 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:08.345 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:08.345 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:08.845 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:08.872 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:08.872 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:08.874 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:09.374 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:09.444 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:09.446 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:09.446 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:09.946 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:10.32 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:10.33 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:10.33 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:10.533 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:10.582 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:10.582 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:10.582 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:11.82 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:11.148 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:11.148 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:11.148 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:11.648 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:11.678 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:11.678 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:11.680 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:12.180 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:12.203 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:12.204 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:12.204 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:12.704 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:12.727 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:12.727 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:12.727 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:13.229 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:13.298 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:13.299 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:13.299 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:13.799 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:13.819 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:13.819 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:13.819 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:14.319 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:14.345 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:14.345 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:14.345 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:14.846 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:14.924 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:14.924 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:14.924 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:15.424 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:15.444 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:15.444 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:15.444 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:15.944 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:15.970 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:15.970 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:15.970 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:16.470 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:16.548 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:16.549 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:16.549 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:17.49 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:17.69 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:17.69 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:17.71 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:17.571 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:17.595 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:17.595 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:17.595 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:18.95 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:18.173 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:18.174 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:18.174 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:18.674 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:18.694 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:18.694 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:18.694 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...
*Debug 10/03 17:27:19.194 Chassis Chain: Updating link states for ports [(1,1,5)]
*Debug 10/03 17:27:19.220 Chassis Chain: GetPortInformation returning result=None, portVector=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+PortVector_V3, portInfo=Ixia.Aptixia.ChassisManager.stubs.ChassisConfig+StringVector
*Debug 10/03 17:27:19.220 Chassis Chain: port 192.168.31.42;1;5 link state = 3
*Debug 10/03 17:27:19.220 Chassis Chain: Link down on the ports [(1,1,5)] sleeping...

################################################################################
## 10/03/2017 17:27:19: Log Rotate
################################################################################

